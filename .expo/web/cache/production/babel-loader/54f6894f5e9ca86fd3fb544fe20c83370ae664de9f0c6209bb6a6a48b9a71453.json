{"ast":null,"code":"import _toConsumableArray from\"@babel/runtime/helpers/toConsumableArray\";import _asyncToGenerator from\"@babel/runtime/helpers/asyncToGenerator\";import _slicedToArray from\"@babel/runtime/helpers/slicedToArray\";import React,{useState,useEffect}from'react';import View from\"react-native-web/dist/exports/View\";import Text from\"react-native-web/dist/exports/Text\";import StyleSheet from\"react-native-web/dist/exports/StyleSheet\";import ScrollView from\"react-native-web/dist/exports/ScrollView\";import TouchableOpacity from\"react-native-web/dist/exports/TouchableOpacity\";import Image from\"react-native-web/dist/exports/Image\";import ActivityIndicator from\"react-native-web/dist/exports/ActivityIndicator\";import Dimensions from\"react-native-web/dist/exports/Dimensions\";import FlatList from\"react-native-web/dist/exports/FlatList\";import TextInput from\"react-native-web/dist/exports/TextInput\";import Platform from\"react-native-web/dist/exports/Platform\";import{SafeAreaView}from'react-native-safe-area-context';import{getGenres,getMoviesByGenre,searchMovies,getTopRatedMovies,getMovieDetails,getMoviesByIds}from\"../services/tmdbService\";import{socketService}from\"../services/socketService\";import MovieModal from\"../components/MovieModal\";import{getPriorityMoviesByGenre}from\"../data/priorityMovies\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";var _Dimensions$get=Dimensions.get('window'),width=_Dimensions$get.width;var POSTER_WIDTH=156;var POSTER_HEIGHT=234;export default function HomeScreen(_ref){var navigation=_ref.navigation;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),genres=_useState2[0],setGenres=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),moviesByGenre=_useState4[0],setMoviesByGenre=_useState4[1];var _useState5=useState(true),_useState6=_slicedToArray(_useState5,2),loading=_useState6[0],setLoading=_useState6[1];var _useState7=useState(null),_useState8=_slicedToArray(_useState7,2),selectedMovie=_useState8[0],setSelectedMovie=_useState8[1];var _useState9=useState(false),_useState0=_slicedToArray(_useState9,2),modalVisible=_useState0[0],setModalVisible=_useState0[1];var _useState1=useState(''),_useState10=_slicedToArray(_useState1,2),searchQuery=_useState10[0],setSearchQuery=_useState10[1];var _useState11=useState([]),_useState12=_slicedToArray(_useState11,2),searchResults=_useState12[0],setSearchResults=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isSearching=_useState14[0],setIsSearching=_useState14[1];var _useState15=useState([]),_useState16=_slicedToArray(_useState15,2),featuredMovies=_useState16[0],setFeaturedMovies=_useState16[1];useEffect(function(){loadGenresAndMovies();setupSocketConnection();return function(){socketService.disconnect();};},[]);var setupSocketConnection=function setupSocketConnection(){socketService.connect();socketService.onMovieSelected(function(movie){console.log('Movie selected by customer:',movie);});};var loadGenresAndMovies=function(){var _ref2=_asyncToGenerator(function*(){try{setLoading(true);try{var topMovies=yield getTopRatedMovies(1,50);var allTimeTopMovies=topMovies.sort(function(a,b){return b.vote_average-a.vote_average;}).slice(0,10);console.log('Loaded featured movies:',allTimeTopMovies.length,allTimeTopMovies.map(function(m){return m.title;}));setFeaturedMovies(allTimeTopMovies);}catch(error){console.error('Error loading featured movies:',error);setFeaturedMovies([]);}var genresData=yield getGenres();setGenres(genresData);var moviesData={};var usedMovieIds=new Set();var filteredGenres=genresData.filter(function(genre){return genre.name!=='Documentary'&&genre.name!=='TV Movie';});var priorityGenres=['Action','Comedy','Drama','Thriller','Horror','Romance','Adventure','Sci-Fi','Family & Animation','Fantasy','Musical','Crime'];var sortedGenres=_toConsumableArray(filteredGenres).sort(function(a,b){var aPriority=priorityGenres.indexOf(a.name);var bPriority=priorityGenres.indexOf(b.name);if(aPriority===-1&&bPriority===-1)return 0;if(aPriority===-1)return 1;if(bPriority===-1)return-1;return aPriority-bPriority;});var familyGenre=filteredGenres.find(function(g){return g.name==='Family';});var animationGenre=filteredGenres.find(function(g){return g.name==='Animation';});if(familyGenre||animationGenre){try{var priorityMoviesForGenre=getPriorityMoviesByGenre('Family & Animation');var finalGenreMovies=[];if(priorityMoviesForGenre.length>0){var priorityMovieIds=priorityMoviesForGenre.map(function(movie){return movie.tmdbId;});var priorityMovies=yield getMoviesByIds(priorityMovieIds);finalGenreMovies=priorityMovies;priorityMovies.forEach(function(movie){return usedMovieIds.add(movie.id);});}var allMovies=[];if(familyGenre){var familyMovies=yield getMoviesByGenre(familyGenre.id,1,50);allMovies=[].concat(_toConsumableArray(allMovies),_toConsumableArray(familyMovies));}if(animationGenre){var animationMovies=yield getMoviesByGenre(animationGenre.id,1,50);allMovies=[].concat(_toConsumableArray(allMovies),_toConsumableArray(animationMovies));}var uniqueMovies=allMovies.filter(function(movie,index,self){return index===self.findIndex(function(m){return m.id===movie.id;});});var remainingSlots=50-finalGenreMovies.length;var additionalMovies=uniqueMovies.filter(function(movie){return!usedMovieIds.has(movie.id);}).slice(0,remainingSlots);finalGenreMovies=[].concat(_toConsumableArray(finalGenreMovies),_toConsumableArray(additionalMovies));additionalMovies.forEach(function(movie){return usedMovieIds.add(movie.id);});moviesData['Family & Animation']=finalGenreMovies;}catch(error){console.error('Error loading Family & Animation movies:',error);moviesData['Family & Animation']=[];}}for(var genre of sortedGenres){if(genre.name==='Family'||genre.name==='Animation'){continue;}try{var _priorityMoviesForGenre=getPriorityMoviesByGenre(genre.name);var _finalGenreMovies=[];if(_priorityMoviesForGenre.length>0){var _priorityMovieIds=_priorityMoviesForGenre.map(function(movie){return movie.tmdbId;});var _priorityMovies=yield getMoviesByIds(_priorityMovieIds);_finalGenreMovies=_priorityMovies;_priorityMovies.forEach(function(movie){return usedMovieIds.add(movie.id);});}var _allMovies=yield getMoviesByGenre(genre.id,1,100);var _remainingSlots=50-_finalGenreMovies.length;var _additionalMovies=_allMovies.filter(function(movie){return!usedMovieIds.has(movie.id);}).slice(0,_remainingSlots);_finalGenreMovies=[].concat(_toConsumableArray(_finalGenreMovies),_toConsumableArray(_additionalMovies));_additionalMovies.forEach(function(movie){return usedMovieIds.add(movie.id);});moviesData[genre.id]=_finalGenreMovies;}catch(error){console.error(`Error loading movies for genre ${genre.name}:`,error);moviesData[genre.id]=[];}}setMoviesByGenre(moviesData);}catch(error){console.error('Error loading data:',error);}finally{setLoading(false);}});return function loadGenresAndMovies(){return _ref2.apply(this,arguments);};}();var handleMoviePress=function handleMoviePress(movie){console.log('ðŸŽ¬ MOVIE SELECTED BY CUSTOMER:',movie.title);console.log('Full movie object:',movie);setSelectedMovie(movie);setModalVisible(true);console.log('ðŸ“¡ Sending movie selection to magician app...');var result=socketService.selectMovie(movie);console.log('Socket send result:',result);};var handleSearch=function(){var _ref3=_asyncToGenerator(function*(query){setSearchQuery(query);if(query.trim().length===0){setSearchResults([]);setIsSearching(false);return;}if(query.trim().length<2){setSearchResults([]);return;}setIsSearching(true);try{var results=yield searchMovies(query,1);setSearchResults(results);}catch(error){console.error('Error searching movies:',error);setSearchResults([]);}finally{setIsSearching(false);}});return function handleSearch(_x){return _ref3.apply(this,arguments);};}();var renderMoviePoster=function renderMoviePoster(_ref4){var item=_ref4.item;return _jsxs(TouchableOpacity,{style:styles.moviePoster,onPress:function onPress(){return handleMoviePress(item);},activeOpacity:0.7,children:[_jsx(Image,{source:{uri:`https://image.tmdb.org/t/p/w500${item.poster_path}`},style:styles.posterImage,resizeMode:\"cover\"}),item.vote_average&&_jsx(View,{style:styles.ratingBadge,children:_jsxs(Text,{style:styles.ratingText,children:[\"\\u2605 \",item.vote_average.toFixed(1)]})}),_jsx(View,{style:styles.posterOverlay,children:_jsx(Text,{style:styles.movieTitle,numberOfLines:2,children:item.title})})]});};var renderGenreSection=function renderGenreSection(_ref5){var genre=_ref5.item;var genreKey;var displayName;if(genre.name==='Family'||genre.name==='Animation'){genreKey='Family & Animation';displayName='Family & Animation';}else{genreKey=genre.id;displayName=genre.name;}var movies=moviesByGenre[genreKey]||[];if(movies.length===0)return null;return _jsxs(View,{style:styles.genreSection,children:[_jsxs(View,{style:styles.genreHeader,children:[_jsx(View,{style:styles.genreTitleRow,children:_jsx(Text,{style:styles.genreTitle,children:displayName})}),_jsxs(Text,{style:styles.movieCount,children:[movies.length,\" movies\"]})]}),_jsx(FlatList,{data:movies,renderItem:renderMoviePoster,keyExtractor:function keyExtractor(movie){return movie.id.toString();},horizontal:true,showsHorizontalScrollIndicator:false,contentContainerStyle:styles.moviesRow,snapToInterval:POSTER_WIDTH+16,decelerationRate:\"fast\"})]});};var renderFeaturedMovies=function renderFeaturedMovies(){console.log('Rendering Featured Movies, featuredMovies length:',featuredMovies.length);if(featuredMovies.length===0){console.log('No featured movies to display');return null;}return _jsxs(View,{style:styles.featuredSection,children:[_jsxs(View,{style:styles.featuredHeader,children:[_jsx(Text,{style:styles.featuredTitle,children:\"Featured Movies\"}),_jsx(Text,{style:styles.featuredSubtitle,children:\"Top 10 Highest-Rated Films of All Time\"})]}),_jsx(FlatList,{data:featuredMovies,renderItem:renderMoviePoster,keyExtractor:function keyExtractor(movie){return movie.id.toString();},horizontal:true,showsHorizontalScrollIndicator:false,contentContainerStyle:styles.moviesRow,snapToInterval:POSTER_WIDTH+16,decelerationRate:\"fast\"})]});};if(loading){return _jsxs(View,{style:styles.loadingContainer,children:[_jsx(ActivityIndicator,{size:\"large\",color:\"#007AFF\"}),_jsx(Text,{style:styles.loadingText,children:\"Loading movies...\"})]});}return _jsxs(SafeAreaView,{style:styles.container,children:[_jsxs(View,{style:styles.imdbHeader,children:[_jsx(Text,{style:styles.imdbTitle,children:\"IMBD\"}),_jsxs(View,{style:styles.searchContainer,children:[_jsx(TextInput,{style:styles.searchInput,placeholder:\"Search movies...\",placeholderTextColor:\"#999\",value:searchQuery,onChangeText:handleSearch,autoCapitalize:\"none\",autoCorrect:false}),isSearching&&_jsx(ActivityIndicator,{size:\"small\",color:\"#000\",style:styles.searchSpinner})]})]}),searchQuery.trim().length>0&&searchResults.length>0&&_jsx(View,{style:styles.searchDropdownOverlay,children:_jsx(View,{style:styles.searchDropdown,children:_jsx(FlatList,{data:searchResults.slice(0,8),renderItem:function renderItem(_ref6){var item=_ref6.item;return _jsxs(TouchableOpacity,{style:styles.searchResultItem,onPress:function onPress(){setSearchQuery('');setSearchResults([]);handleMoviePress(item);},children:[_jsx(Text,{style:styles.searchResultTitle,children:item.title}),_jsx(Text,{style:styles.searchResultYear,children:new Date(item.release_date).getFullYear()})]});},keyExtractor:function keyExtractor(item){return item.id.toString();},showsVerticalScrollIndicator:false,nestedScrollEnabled:true})})}),_jsx(FlatList,{data:['featured'].concat(_toConsumableArray(genres)),renderItem:function renderItem(_ref7){var item=_ref7.item,index=_ref7.index;if(item==='featured'){return renderFeaturedMovies();}return renderGenreSection({item:item});},keyExtractor:function keyExtractor(item,index){if(item==='featured')return'featured';return item.id.toString();},showsVerticalScrollIndicator:false,contentContainerStyle:styles.genresList,onRefresh:loadGenresAndMovies,refreshing:loading}),_jsx(MovieModal,{visible:modalVisible,movie:selectedMovie,onClose:function onClose(){setModalVisible(false);setSelectedMovie(null);}})]});}var styles=StyleSheet.create({container:{flex:1,backgroundColor:'#0a0a0a'},loadingContainer:{flex:1,justifyContent:'center',alignItems:'center',backgroundColor:'#0a0a0a'},loadingText:{color:'#fff',marginTop:16,fontSize:16},imdbHeader:{backgroundColor:'#F5C518',paddingTop:20,paddingBottom:20,paddingHorizontal:20,elevation:4,shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:3.84},imdbTitle:{fontSize:32,fontWeight:'bold',color:'#000',textAlign:'center',marginBottom:16,letterSpacing:2},searchContainer:{position:'relative',zIndex:9999},searchInput:{backgroundColor:'#fff',borderRadius:25,paddingHorizontal:20,paddingVertical:12,fontSize:16,color:'#000',elevation:2,shadowColor:'#000',shadowOffset:{width:0,height:1},shadowOpacity:0.2,shadowRadius:2},searchSpinner:{position:'absolute',right:15,top:12},searchDropdownOverlay:{position:'absolute',top:0,left:0,right:0,zIndex:999999,elevation:999999,pointerEvents:'box-none'},searchDropdown:{position:'absolute',top:120,left:20,right:20,backgroundColor:'#fff',borderRadius:12,elevation:8,shadowColor:'#000',shadowOffset:{width:0,height:4},shadowOpacity:0.3,shadowRadius:8,maxHeight:300,zIndex:999999},searchResultItem:{paddingHorizontal:20,paddingVertical:12,borderBottomWidth:1,borderBottomColor:'#f0f0f0',flexDirection:'row',justifyContent:'space-between',alignItems:'center'},searchResultTitle:{fontSize:16,color:'#000',fontWeight:'500',flex:1},searchResultYear:{fontSize:14,color:'#666',marginLeft:12},featuredSection:{marginBottom:30},featuredHeader:{paddingHorizontal:20,marginBottom:16,alignItems:'center'},featuredTitle:{fontSize:24,fontWeight:'bold',color:'#fff',marginBottom:4},featuredSubtitle:{fontSize:14,color:'#888',textAlign:'center'},genresList:{paddingBottom:20},genreSection:{marginBottom:30},genreHeader:{flexDirection:'row',justifyContent:'space-between',alignItems:'center',paddingHorizontal:20,marginBottom:16},genreTitleRow:{flexDirection:'row',alignItems:'center'},genreTitle:{fontSize:22,fontWeight:'bold',color:'#fff',marginRight:12},movieCount:{fontSize:14,color:'#888'},moviesRow:{paddingHorizontal:20},moviePoster:{width:POSTER_WIDTH,height:POSTER_HEIGHT,marginRight:16,borderRadius:12,overflow:'hidden',elevation:3,shadowColor:'#000',shadowOffset:{width:0,height:2},shadowOpacity:0.25,shadowRadius:3.84,position:'relative'},posterImage:{width:'100%',height:'100%'},ratingBadge:{position:'absolute',top:8,right:8,backgroundColor:'rgba(0,0,0,0.8)',paddingHorizontal:8,paddingVertical:4,borderRadius:12,borderWidth:1,borderColor:'#FFD700'},ratingText:{fontSize:12,fontWeight:'bold',color:'#FFD700'},posterOverlay:{position:'absolute',bottom:0,left:0,right:0,backgroundColor:'rgba(0,0,0,0.9)',padding:12},movieTitle:{fontSize:14,fontWeight:'bold',color:'#fff',marginBottom:6,textAlign:'center',lineHeight:16},movieMeta:{flexDirection:'row',justifyContent:'space-between',alignItems:'center'},movieYear:{fontSize:11,color:'#ccc',fontWeight:'500'},movieRating:{fontSize:11,color:'#FFD700',fontWeight:'bold'}});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Image","ActivityIndicator","Dimensions","FlatList","TextInput","Platform","SafeAreaView","getGenres","getMoviesByGenre","searchMovies","getTopRatedMovies","getMovieDetails","getMoviesByIds","socketService","MovieModal","getPriorityMoviesByGenre","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","POSTER_WIDTH","POSTER_HEIGHT","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","genres","setGenres","_useState3","_useState4","moviesByGenre","setMoviesByGenre","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedMovie","setSelectedMovie","_useState9","_useState0","modalVisible","setModalVisible","_useState1","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","searchResults","setSearchResults","_useState13","_useState14","isSearching","setIsSearching","_useState15","_useState16","featuredMovies","setFeaturedMovies","loadGenresAndMovies","setupSocketConnection","disconnect","connect","onMovieSelected","movie","console","log","_ref2","_asyncToGenerator","topMovies","allTimeTopMovies","sort","a","b","vote_average","slice","length","map","m","title","error","genresData","moviesData","usedMovieIds","Set","filteredGenres","filter","genre","name","priorityGenres","sortedGenres","_toConsumableArray","aPriority","indexOf","bPriority","familyGenre","find","g","animationGenre","priorityMoviesForGenre","finalGenreMovies","priorityMovieIds","tmdbId","priorityMovies","forEach","add","id","allMovies","familyMovies","concat","animationMovies","uniqueMovies","index","self","findIndex","remainingSlots","additionalMovies","has","apply","arguments","handleMoviePress","result","selectMovie","handleSearch","_ref3","query","trim","results","_x","renderMoviePoster","_ref4","item","style","styles","moviePoster","onPress","activeOpacity","children","source","uri","poster_path","posterImage","resizeMode","ratingBadge","ratingText","toFixed","posterOverlay","movieTitle","numberOfLines","renderGenreSection","_ref5","genreKey","displayName","movies","genreSection","genreHeader","genreTitleRow","genreTitle","movieCount","data","renderItem","keyExtractor","toString","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","moviesRow","snapToInterval","decelerationRate","renderFeaturedMovies","featuredSection","featuredHeader","featuredTitle","featuredSubtitle","loadingContainer","size","color","loadingText","container","imdbHeader","imdbTitle","searchContainer","searchInput","placeholder","placeholderTextColor","value","onChangeText","autoCapitalize","autoCorrect","searchSpinner","searchDropdownOverlay","searchDropdown","_ref6","searchResultItem","searchResultTitle","searchResultYear","Date","release_date","getFullYear","showsVerticalScrollIndicator","nestedScrollEnabled","_ref7","genresList","onRefresh","refreshing","visible","onClose","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","paddingTop","paddingBottom","paddingHorizontal","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","fontWeight","textAlign","marginBottom","letterSpacing","position","zIndex","borderRadius","paddingVertical","right","top","left","pointerEvents","maxHeight","borderBottomWidth","borderBottomColor","flexDirection","marginLeft","marginRight","overflow","borderWidth","borderColor","bottom","padding","lineHeight","movieMeta","movieYear","movieRating"],"sources":["/Users/francescaforzoni/Downloads/Dad_MagicApp_002/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Image,\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  TextInput,\n  Platform,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { getGenres, getMoviesByGenre, searchMovies, getTopRatedMovies, getMovieDetails, getMoviesByIds } from '../services/tmdbService';\nimport { socketService } from '../services/socketService';\nimport MovieModal from '../components/MovieModal';\nimport { getPriorityMoviesByGenre } from '../data/priorityMovies';\n\nconst { width } = Dimensions.get('window');\nconst POSTER_WIDTH = 156; // 30% larger (120 * 1.3)\nconst POSTER_HEIGHT = 234; // 30% larger (180 * 1.3)\n\nexport default function HomeScreen({ navigation }) {\n  const [genres, setGenres] = useState([]);\n  const [moviesByGenre, setMoviesByGenre] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [featuredMovies, setFeaturedMovies] = useState([]);\n\n  useEffect(() => {\n    loadGenresAndMovies();\n    setupSocketConnection();\n    \n    return () => {\n      socketService.disconnect();\n    };\n  }, []);\n\n  const setupSocketConnection = () => {\n    socketService.connect();\n    socketService.onMovieSelected((movie) => {\n      console.log('Movie selected by customer:', movie);\n    });\n  };\n\n\n\n  const loadGenresAndMovies = async () => {\n    try {\n      setLoading(true);\n      \n      // Get top 10 highest-rated movies of all time for featured section\n      try {\n        const topMovies = await getTopRatedMovies(1, 50); // Get more movies to choose from\n        const allTimeTopMovies = topMovies\n          .sort((a, b) => b.vote_average - a.vote_average) // Sort by rating (highest first)\n          .slice(0, 10); // Take top 10\n        console.log('Loaded featured movies:', allTimeTopMovies.length, allTimeTopMovies.map(m => m.title));\n        setFeaturedMovies(allTimeTopMovies);\n      } catch (error) {\n        console.error('Error loading featured movies:', error);\n        setFeaturedMovies([]);\n      }\n      \n      // Get all genres\n      const genresData = await getGenres();\n      setGenres(genresData);\n      \n      // Load movies for each genre and ensure no duplicates\n      const moviesData = {};\n      const usedMovieIds = new Set(); // Track which movies have been assigned\n      \n      // Filter out unwanted genres and combine Family & Animation\n      const filteredGenres = genresData.filter(genre => \n        genre.name !== 'Documentary' && \n        genre.name !== 'TV Movie'\n      );\n      \n      // Sort genres by popularity/importance to prioritize them\n      const priorityGenres = ['Action', 'Comedy', 'Drama', 'Thriller', 'Horror', 'Romance', 'Adventure', 'Sci-Fi', 'Family & Animation', 'Fantasy', 'Musical', 'Crime'];\n      const sortedGenres = [...filteredGenres].sort((a, b) => {\n        const aPriority = priorityGenres.indexOf(a.name);\n        const bPriority = priorityGenres.indexOf(b.name);\n        if (aPriority === -1 && bPriority === -1) return 0;\n        if (aPriority === -1) return 1;\n        if (bPriority === -1) return -1;\n        return aPriority - bPriority;\n      });\n      \n      // Handle Family & Animation combination first\n      const familyGenre = filteredGenres.find(g => g.name === 'Family');\n      const animationGenre = filteredGenres.find(g => g.name === 'Animation');\n      \n      if (familyGenre || animationGenre) {\n        try {\n          // Get priority movies for Family & Animation first\n          const priorityMoviesForGenre = getPriorityMoviesByGenre('Family & Animation');\n          let finalGenreMovies = [];\n          \n          if (priorityMoviesForGenre.length > 0) {\n            const priorityMovieIds = priorityMoviesForGenre.map(movie => movie.tmdbId);\n            const priorityMovies = await getMoviesByIds(priorityMovieIds);\n            finalGenreMovies = priorityMovies;\n            priorityMovies.forEach(movie => usedMovieIds.add(movie.id));\n          }\n          \n          // Get regular movies from both genres\n          let allMovies = [];\n          if (familyGenre) {\n            const familyMovies = await getMoviesByGenre(familyGenre.id, 1, 50);\n            allMovies = [...allMovies, ...familyMovies];\n          }\n          \n          if (animationGenre) {\n            const animationMovies = await getMoviesByGenre(animationGenre.id, 1, 50);\n            allMovies = [...allMovies, ...animationMovies];\n          }\n          \n          // Remove duplicates\n          const uniqueMovies = allMovies.filter((movie, index, self) => \n            index === self.findIndex(m => m.id === movie.id)\n          );\n          \n          // Add remaining available movies (up to 50 total)\n          const remainingSlots = 50 - finalGenreMovies.length;\n          const additionalMovies = uniqueMovies\n            .filter(movie => !usedMovieIds.has(movie.id))\n            .slice(0, remainingSlots);\n          \n          finalGenreMovies = [...finalGenreMovies, ...additionalMovies];\n          \n          // Mark additional movies as used\n          additionalMovies.forEach(movie => usedMovieIds.add(movie.id));\n          \n          moviesData['Family & Animation'] = finalGenreMovies;\n        } catch (error) {\n          console.error('Error loading Family & Animation movies:', error);\n          moviesData['Family & Animation'] = [];\n        }\n      }\n      \n      // Process other genres\n      for (const genre of sortedGenres) {\n        // Skip Family and Animation as they're handled above\n        if (genre.name === 'Family' || genre.name === 'Animation') {\n          continue;\n        }\n        \n        try {\n          // Get priority movies for this genre first\n          const priorityMoviesForGenre = getPriorityMoviesByGenre(genre.name);\n          \n          // Fetch priority movies directly by their IDs to guarantee they appear\n          let finalGenreMovies = [];\n          if (priorityMoviesForGenre.length > 0) {\n            const priorityMovieIds = priorityMoviesForGenre.map(movie => movie.tmdbId);\n            const priorityMovies = await getMoviesByIds(priorityMovieIds);\n            finalGenreMovies = priorityMovies;\n            priorityMovies.forEach(movie => usedMovieIds.add(movie.id));\n          }\n          \n          // Get regular movies for this genre\n          const allMovies = await getMoviesByGenre(genre.id, 1, 100);\n          \n          // Add remaining available movies (up to 50 total)\n          const remainingSlots = 50 - finalGenreMovies.length;\n          const additionalMovies = allMovies\n            .filter(movie => !usedMovieIds.has(movie.id))\n            .slice(0, remainingSlots);\n          \n          finalGenreMovies = [...finalGenreMovies, ...additionalMovies];\n          \n          // Mark additional movies as used\n          additionalMovies.forEach(movie => usedMovieIds.add(movie.id));\n          \n          moviesData[genre.id] = finalGenreMovies;\n        } catch (error) {\n          console.error(`Error loading movies for genre ${genre.name}:`, error);\n          moviesData[genre.id] = [];\n        }\n      }\n      \n      setMoviesByGenre(moviesData);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMoviePress = (movie) => {\n    console.log('ðŸŽ¬ MOVIE SELECTED BY CUSTOMER:', movie.title);\n    console.log('Full movie object:', movie);\n    setSelectedMovie(movie);\n    setModalVisible(true);\n    \n    // Send movie selection to magician app via socket\n    console.log('ðŸ“¡ Sending movie selection to magician app...');\n    const result = socketService.selectMovie(movie);\n    console.log('Socket send result:', result);\n  };\n\n  const handleSearch = async (query) => {\n    setSearchQuery(query);\n    \n    if (query.trim().length === 0) {\n      setSearchResults([]);\n      setIsSearching(false);\n      return;\n    }\n    \n    if (query.trim().length < 2) {\n      setSearchResults([]);\n      return;\n    }\n    \n    setIsSearching(true);\n    try {\n      const results = await searchMovies(query, 1);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const renderMoviePoster = ({ item }) => (\n    <TouchableOpacity\n      style={styles.moviePoster}\n      onPress={() => handleMoviePress(item)}\n      activeOpacity={0.7}\n    >\n      <Image\n        source={{\n          uri: `https://image.tmdb.org/t/p/w500${item.poster_path}`,\n        }}\n        style={styles.posterImage}\n        resizeMode=\"cover\"\n      />\n      \n      {/* Rating Badge */}\n      {item.vote_average && (\n        <View style={styles.ratingBadge}>\n          <Text style={styles.ratingText}>\n            â˜… {item.vote_average.toFixed(1)}\n          </Text>\n        </View>\n      )}\n      \n      {/* Movie Info Overlay */}\n      <View style={styles.posterOverlay}>\n        <Text style={styles.movieTitle} numberOfLines={2}>\n          {item.title}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n\n  const renderGenreSection = ({ item: genre }) => {\n    // Handle combined Family & Animation genre\n    let genreKey;\n    let displayName;\n    \n    if (genre.name === 'Family' || genre.name === 'Animation') {\n      genreKey = 'Family & Animation';\n      displayName = 'Family & Animation';\n    } else {\n      genreKey = genre.id;\n      displayName = genre.name;\n    }\n    \n    const movies = moviesByGenre[genreKey] || [];\n    \n    if (movies.length === 0) return null;\n\n    return (\n      <View style={styles.genreSection}>\n        <View style={styles.genreHeader}>\n          <View style={styles.genreTitleRow}>\n            <Text style={styles.genreTitle}>\n              {displayName}\n            </Text>\n          </View>\n          <Text style={styles.movieCount}>{movies.length} movies</Text>\n        </View>\n        \n        <FlatList\n          data={movies}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n\n\n  const renderFeaturedMovies = () => {\n    console.log('Rendering Featured Movies, featuredMovies length:', featuredMovies.length);\n    if (featuredMovies.length === 0) {\n      console.log('No featured movies to display');\n      return null;\n    }\n\n    return (\n      <View style={styles.featuredSection}>\n        <View style={styles.featuredHeader}>\n          <Text style={styles.featuredTitle}>Featured Movies</Text>\n          <Text style={styles.featuredSubtitle}>Top 10 Highest-Rated Films of All Time</Text>\n        </View>\n        \n        <FlatList\n          data={featuredMovies}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n        <Text style={styles.loadingText}>Loading movies...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* Yellow IMDB Header */}\n      <View style={styles.imdbHeader}>\n        <Text style={styles.imdbTitle}>IMBD</Text>\n        <View style={styles.searchContainer}>\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"Search movies...\"\n            placeholderTextColor=\"#999\"\n            value={searchQuery}\n            onChangeText={handleSearch}\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n          />\n          {isSearching && (\n            <ActivityIndicator size=\"small\" color=\"#000\" style={styles.searchSpinner} />\n          )}\n        </View>\n        \n\n        \n\n      </View>\n      \n      {/* Search Results Dropdown - Positioned as absolute overlay */}\n      {searchQuery.trim().length > 0 && searchResults.length > 0 && (\n        <View style={styles.searchDropdownOverlay}>\n          <View style={styles.searchDropdown}>\n            <FlatList\n              data={searchResults.slice(0, 8)} // Show max 8 results\n              renderItem={({ item }) => (\n                <TouchableOpacity\n                  style={styles.searchResultItem}\n                  onPress={() => {\n                    setSearchQuery('');\n                    setSearchResults([]);\n                    handleMoviePress(item);\n                  }}\n                >\n                  <Text style={styles.searchResultTitle}>{item.title}</Text>\n                  <Text style={styles.searchResultYear}>\n                    {new Date(item.release_date).getFullYear()}\n                  </Text>\n                </TouchableOpacity>\n              )}\n              keyExtractor={(item) => item.id.toString()}\n              showsVerticalScrollIndicator={false}\n              nestedScrollEnabled={true}\n            />\n          </View>\n        </View>\n      )}\n      \n      {/* Content - Always show genres, search only shows dropdown */}\n      <FlatList\n        data={['featured', ...genres]} // Add featured section at the top\n        renderItem={({ item, index }) => {\n          if (item === 'featured') {\n            return renderFeaturedMovies();\n          }\n          return renderGenreSection({ item });\n        }}\n        keyExtractor={(item, index) => {\n          if (item === 'featured') return 'featured';\n          return item.id.toString();\n        }}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.genresList}\n        onRefresh={loadGenresAndMovies}\n        refreshing={loading}\n      />\n\n      <MovieModal\n        visible={modalVisible}\n        movie={selectedMovie}\n        onClose={() => {\n          setModalVisible(false);\n          setSelectedMovie(null);\n        }}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0a0a0a',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#0a0a0a',\n  },\n  loadingText: {\n    color: '#fff',\n    marginTop: 16,\n    fontSize: 16,\n  },\n  imdbHeader: {\n    backgroundColor: '#F5C518', // IMDB yellow\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  imdbTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 16,\n    letterSpacing: 2,\n  },\n  searchContainer: {\n    position: 'relative',\n    zIndex: 9999,\n  },\n\n\n  searchInput: {\n    backgroundColor: '#fff',\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    fontSize: 16,\n    color: '#000',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n  },\n  searchSpinner: {\n    position: 'absolute',\n    right: 15,\n    top: 12,\n  },\n  searchDropdownOverlay: {\n    position: 'absolute',\n    top: 0,\n    left: 0,\n    right: 0,\n    zIndex: 999999,\n    elevation: 999999,\n    pointerEvents: 'box-none',\n  },\n  searchDropdown: {\n    position: 'absolute',\n    top: 120, // Position below the header\n    left: 20,\n    right: 20,\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    elevation: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    maxHeight: 300,\n    zIndex: 999999,\n  },\n  searchResultItem: {\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  searchResultTitle: {\n    fontSize: 16,\n    color: '#000',\n    fontWeight: '500',\n    flex: 1,\n  },\n  searchResultYear: {\n    fontSize: 14,\n    color: '#666',\n    marginLeft: 12,\n  },\n\n  featuredSection: {\n    marginBottom: 30,\n  },\n  featuredHeader: {\n    paddingHorizontal: 20,\n    marginBottom: 16,\n    alignItems: 'center',\n  },\n  featuredTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 4,\n  },\n  featuredSubtitle: {\n    fontSize: 14,\n    color: '#888',\n    textAlign: 'center',\n  },\n  genresList: {\n    paddingBottom: 20,\n  },\n  genreSection: {\n    marginBottom: 30,\n  },\n  genreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 16,\n  },\n  genreTitleRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  genreTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginRight: 12,\n  },\n\n  movieCount: {\n    fontSize: 14,\n    color: '#888',\n  },\n  moviesRow: {\n    paddingHorizontal: 20,\n  },\n  moviePoster: {\n    width: POSTER_WIDTH,\n    height: POSTER_HEIGHT,\n    marginRight: 16,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    position: 'relative',\n  },\n  posterImage: {\n    width: '100%',\n    height: '100%',\n  },\n  ratingBadge: {\n    position: 'absolute',\n    top: 8,\n    right: 8,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#FFD700',\n  },\n  ratingText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#FFD700',\n  },\n  posterOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.9)',\n    padding: 12,\n  },\n  movieTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 6,\n    textAlign: 'center',\n    lineHeight: 16,\n  },\n  movieMeta: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  movieYear: {\n    fontSize: 11,\n    color: '#ccc',\n    fontWeight: '500',\n  },\n  movieRating: {\n    fontSize: 11,\n    color: '#FFD700',\n    fontWeight: 'bold',\n  },\n\n});\n"],"mappings":"iNAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAAC,OAAAC,IAAA,iDAAAC,IAAA,iDAAAC,UAAA,uDAAAC,UAAA,uDAAAC,gBAAA,6DAAAC,KAAA,kDAAAC,iBAAA,8DAAAC,UAAA,uDAAAC,QAAA,qDAAAC,SAAA,sDAAAC,QAAA,8CAcnD,OAASC,YAAY,KAAQ,gCAAgC,CAC7D,OAASC,SAAS,CAAEC,gBAAgB,CAAEC,YAAY,CAAEC,iBAAiB,CAAEC,eAAe,CAAEC,cAAc,+BACtG,OAASC,aAAa,iCACtB,MAAO,CAAAC,UAAU,gCACjB,OAASC,wBAAwB,8BAAiC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAElE,IAAAC,eAAA,CAAkBlB,UAAU,CAACmB,GAAG,CAAC,QAAQ,CAAC,CAAlCC,KAAK,CAAAF,eAAA,CAALE,KAAK,CACb,GAAM,CAAAC,YAAY,CAAG,GAAG,CACxB,GAAM,CAAAC,aAAa,CAAG,GAAG,CAEzB,cAAe,SAAS,CAAAC,UAAUA,CAAAC,IAAA,CAAiB,IAAd,CAAAC,UAAU,CAAAD,IAAA,CAAVC,UAAU,CAC7C,IAAAC,SAAA,CAA4BnC,QAAQ,CAAC,EAAE,CAAC,CAAAoC,UAAA,CAAAC,cAAA,CAAAF,SAAA,IAAjCG,MAAM,CAAAF,UAAA,IAAEG,SAAS,CAAAH,UAAA,IACxB,IAAAI,UAAA,CAA0CxC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAAyC,UAAA,CAAAJ,cAAA,CAAAG,UAAA,IAA/CE,aAAa,CAAAD,UAAA,IAAEE,gBAAgB,CAAAF,UAAA,IACtC,IAAAG,UAAA,CAA8B5C,QAAQ,CAAC,IAAI,CAAC,CAAA6C,UAAA,CAAAR,cAAA,CAAAO,UAAA,IAArCE,OAAO,CAAAD,UAAA,IAAEE,UAAU,CAAAF,UAAA,IAC1B,IAAAG,UAAA,CAA0ChD,QAAQ,CAAC,IAAI,CAAC,CAAAiD,UAAA,CAAAZ,cAAA,CAAAW,UAAA,IAAjDE,aAAa,CAAAD,UAAA,IAAEE,gBAAgB,CAAAF,UAAA,IACtC,IAAAG,UAAA,CAAwCpD,QAAQ,CAAC,KAAK,CAAC,CAAAqD,UAAA,CAAAhB,cAAA,CAAAe,UAAA,IAAhDE,YAAY,CAAAD,UAAA,IAAEE,eAAe,CAAAF,UAAA,IACpC,IAAAG,UAAA,CAAsCxD,QAAQ,CAAC,EAAE,CAAC,CAAAyD,WAAA,CAAApB,cAAA,CAAAmB,UAAA,IAA3CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAClC,IAAAG,WAAA,CAA0C5D,QAAQ,CAAC,EAAE,CAAC,CAAA6D,WAAA,CAAAxB,cAAA,CAAAuB,WAAA,IAA/CE,aAAa,CAAAD,WAAA,IAAEE,gBAAgB,CAAAF,WAAA,IACtC,IAAAG,WAAA,CAAsChE,QAAQ,CAAC,KAAK,CAAC,CAAAiE,WAAA,CAAA5B,cAAA,CAAA2B,WAAA,IAA9CE,WAAW,CAAAD,WAAA,IAAEE,cAAc,CAAAF,WAAA,IAClC,IAAAG,WAAA,CAA4CpE,QAAQ,CAAC,EAAE,CAAC,CAAAqE,WAAA,CAAAhC,cAAA,CAAA+B,WAAA,IAAjDE,cAAc,CAAAD,WAAA,IAAEE,iBAAiB,CAAAF,WAAA,IAExCpE,SAAS,CAAC,UAAM,CACduE,mBAAmB,CAAC,CAAC,CACrBC,qBAAqB,CAAC,CAAC,CAEvB,MAAO,WAAM,CACXrD,aAAa,CAACsD,UAAU,CAAC,CAAC,CAC5B,CAAC,CACH,CAAC,CAAE,EAAE,CAAC,CAEN,GAAM,CAAAD,qBAAqB,CAAG,QAAxB,CAAAA,qBAAqBA,CAAA,CAAS,CAClCrD,aAAa,CAACuD,OAAO,CAAC,CAAC,CACvBvD,aAAa,CAACwD,eAAe,CAAC,SAACC,KAAK,CAAK,CACvCC,OAAO,CAACC,GAAG,CAAC,6BAA6B,CAAEF,KAAK,CAAC,CACnD,CAAC,CAAC,CACJ,CAAC,CAID,GAAM,CAAAL,mBAAmB,gBAAAQ,KAAA,CAAAC,iBAAA,CAAG,WAAY,CACtC,GAAI,CACFlC,UAAU,CAAC,IAAI,CAAC,CAGhB,GAAI,CACF,GAAM,CAAAmC,SAAS,MAAS,CAAAjE,iBAAiB,CAAC,CAAC,CAAE,EAAE,CAAC,CAChD,GAAM,CAAAkE,gBAAgB,CAAGD,SAAS,CAC/BE,IAAI,CAAC,SAACC,CAAC,CAAEC,CAAC,QAAK,CAAAA,CAAC,CAACC,YAAY,CAAGF,CAAC,CAACE,YAAY,GAAC,CAC/CC,KAAK,CAAC,CAAC,CAAE,EAAE,CAAC,CACfV,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAEI,gBAAgB,CAACM,MAAM,CAAEN,gBAAgB,CAACO,GAAG,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,CAACC,KAAK,GAAC,CAAC,CACnGrB,iBAAiB,CAACY,gBAAgB,CAAC,CACrC,CAAE,MAAOU,KAAK,CAAE,CACdf,OAAO,CAACe,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CACtDtB,iBAAiB,CAAC,EAAE,CAAC,CACvB,CAGA,GAAM,CAAAuB,UAAU,MAAS,CAAAhF,SAAS,CAAC,CAAC,CACpCyB,SAAS,CAACuD,UAAU,CAAC,CAGrB,GAAM,CAAAC,UAAU,CAAG,CAAC,CAAC,CACrB,GAAM,CAAAC,YAAY,CAAG,GAAI,CAAAC,GAAG,CAAC,CAAC,CAG9B,GAAM,CAAAC,cAAc,CAAGJ,UAAU,CAACK,MAAM,CAAC,SAAAC,KAAK,QAC5C,CAAAA,KAAK,CAACC,IAAI,GAAK,aAAa,EAC5BD,KAAK,CAACC,IAAI,GAAK,UAAU,EAC3B,CAAC,CAGD,GAAM,CAAAC,cAAc,CAAG,CAAC,QAAQ,CAAE,QAAQ,CAAE,OAAO,CAAE,UAAU,CAAE,QAAQ,CAAE,SAAS,CAAE,WAAW,CAAE,QAAQ,CAAE,oBAAoB,CAAE,SAAS,CAAE,SAAS,CAAE,OAAO,CAAC,CACjK,GAAM,CAAAC,YAAY,CAAGC,kBAAA,CAAIN,cAAc,EAAEd,IAAI,CAAC,SAACC,CAAC,CAAEC,CAAC,CAAK,CACtD,GAAM,CAAAmB,SAAS,CAAGH,cAAc,CAACI,OAAO,CAACrB,CAAC,CAACgB,IAAI,CAAC,CAChD,GAAM,CAAAM,SAAS,CAAGL,cAAc,CAACI,OAAO,CAACpB,CAAC,CAACe,IAAI,CAAC,CAChD,GAAII,SAAS,GAAK,CAAC,CAAC,EAAIE,SAAS,GAAK,CAAC,CAAC,CAAE,MAAO,EAAC,CAClD,GAAIF,SAAS,GAAK,CAAC,CAAC,CAAE,MAAO,EAAC,CAC9B,GAAIE,SAAS,GAAK,CAAC,CAAC,CAAE,MAAO,CAAC,CAAC,CAC/B,MAAO,CAAAF,SAAS,CAAGE,SAAS,CAC9B,CAAC,CAAC,CAGF,GAAM,CAAAC,WAAW,CAAGV,cAAc,CAACW,IAAI,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,CAACT,IAAI,GAAK,QAAQ,GAAC,CACjE,GAAM,CAAAU,cAAc,CAAGb,cAAc,CAACW,IAAI,CAAC,SAAAC,CAAC,QAAI,CAAAA,CAAC,CAACT,IAAI,GAAK,WAAW,GAAC,CAEvE,GAAIO,WAAW,EAAIG,cAAc,CAAE,CACjC,GAAI,CAEF,GAAM,CAAAC,sBAAsB,CAAG1F,wBAAwB,CAAC,oBAAoB,CAAC,CAC7E,GAAI,CAAA2F,gBAAgB,CAAG,EAAE,CAEzB,GAAID,sBAAsB,CAACvB,MAAM,CAAG,CAAC,CAAE,CACrC,GAAM,CAAAyB,gBAAgB,CAAGF,sBAAsB,CAACtB,GAAG,CAAC,SAAAb,KAAK,QAAI,CAAAA,KAAK,CAACsC,MAAM,GAAC,CAC1E,GAAM,CAAAC,cAAc,MAAS,CAAAjG,cAAc,CAAC+F,gBAAgB,CAAC,CAC7DD,gBAAgB,CAAGG,cAAc,CACjCA,cAAc,CAACC,OAAO,CAAC,SAAAxC,KAAK,QAAI,CAAAmB,YAAY,CAACsB,GAAG,CAACzC,KAAK,CAAC0C,EAAE,CAAC,GAAC,CAC7D,CAGA,GAAI,CAAAC,SAAS,CAAG,EAAE,CAClB,GAAIZ,WAAW,CAAE,CACf,GAAM,CAAAa,YAAY,MAAS,CAAA1G,gBAAgB,CAAC6F,WAAW,CAACW,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,CAClEC,SAAS,IAAAE,MAAA,CAAAlB,kBAAA,CAAOgB,SAAS,EAAAhB,kBAAA,CAAKiB,YAAY,EAAC,CAC7C,CAEA,GAAIV,cAAc,CAAE,CAClB,GAAM,CAAAY,eAAe,MAAS,CAAA5G,gBAAgB,CAACgG,cAAc,CAACQ,EAAE,CAAE,CAAC,CAAE,EAAE,CAAC,CACxEC,SAAS,IAAAE,MAAA,CAAAlB,kBAAA,CAAOgB,SAAS,EAAAhB,kBAAA,CAAKmB,eAAe,EAAC,CAChD,CAGA,GAAM,CAAAC,YAAY,CAAGJ,SAAS,CAACrB,MAAM,CAAC,SAACtB,KAAK,CAAEgD,KAAK,CAAEC,IAAI,QACvD,CAAAD,KAAK,GAAKC,IAAI,CAACC,SAAS,CAAC,SAAApC,CAAC,QAAI,CAAAA,CAAC,CAAC4B,EAAE,GAAK1C,KAAK,CAAC0C,EAAE,GAAC,EAClD,CAAC,CAGD,GAAM,CAAAS,cAAc,CAAG,EAAE,CAAGf,gBAAgB,CAACxB,MAAM,CACnD,GAAM,CAAAwC,gBAAgB,CAAGL,YAAY,CAClCzB,MAAM,CAAC,SAAAtB,KAAK,QAAI,CAACmB,YAAY,CAACkC,GAAG,CAACrD,KAAK,CAAC0C,EAAE,CAAC,GAAC,CAC5C/B,KAAK,CAAC,CAAC,CAAEwC,cAAc,CAAC,CAE3Bf,gBAAgB,IAAAS,MAAA,CAAAlB,kBAAA,CAAOS,gBAAgB,EAAAT,kBAAA,CAAKyB,gBAAgB,EAAC,CAG7DA,gBAAgB,CAACZ,OAAO,CAAC,SAAAxC,KAAK,QAAI,CAAAmB,YAAY,CAACsB,GAAG,CAACzC,KAAK,CAAC0C,EAAE,CAAC,GAAC,CAE7DxB,UAAU,CAAC,oBAAoB,CAAC,CAAGkB,gBAAgB,CACrD,CAAE,MAAOpB,KAAK,CAAE,CACdf,OAAO,CAACe,KAAK,CAAC,0CAA0C,CAAEA,KAAK,CAAC,CAChEE,UAAU,CAAC,oBAAoB,CAAC,CAAG,EAAE,CACvC,CACF,CAGA,IAAK,GAAM,CAAAK,KAAK,GAAI,CAAAG,YAAY,CAAE,CAEhC,GAAIH,KAAK,CAACC,IAAI,GAAK,QAAQ,EAAID,KAAK,CAACC,IAAI,GAAK,WAAW,CAAE,CACzD,SACF,CAEA,GAAI,CAEF,GAAM,CAAAW,uBAAsB,CAAG1F,wBAAwB,CAAC8E,KAAK,CAACC,IAAI,CAAC,CAGnE,GAAI,CAAAY,iBAAgB,CAAG,EAAE,CACzB,GAAID,uBAAsB,CAACvB,MAAM,CAAG,CAAC,CAAE,CACrC,GAAM,CAAAyB,iBAAgB,CAAGF,uBAAsB,CAACtB,GAAG,CAAC,SAAAb,KAAK,QAAI,CAAAA,KAAK,CAACsC,MAAM,GAAC,CAC1E,GAAM,CAAAC,eAAc,MAAS,CAAAjG,cAAc,CAAC+F,iBAAgB,CAAC,CAC7DD,iBAAgB,CAAGG,eAAc,CACjCA,eAAc,CAACC,OAAO,CAAC,SAAAxC,KAAK,QAAI,CAAAmB,YAAY,CAACsB,GAAG,CAACzC,KAAK,CAAC0C,EAAE,CAAC,GAAC,CAC7D,CAGA,GAAM,CAAAC,UAAS,MAAS,CAAAzG,gBAAgB,CAACqF,KAAK,CAACmB,EAAE,CAAE,CAAC,CAAE,GAAG,CAAC,CAG1D,GAAM,CAAAS,eAAc,CAAG,EAAE,CAAGf,iBAAgB,CAACxB,MAAM,CACnD,GAAM,CAAAwC,iBAAgB,CAAGT,UAAS,CAC/BrB,MAAM,CAAC,SAAAtB,KAAK,QAAI,CAACmB,YAAY,CAACkC,GAAG,CAACrD,KAAK,CAAC0C,EAAE,CAAC,GAAC,CAC5C/B,KAAK,CAAC,CAAC,CAAEwC,eAAc,CAAC,CAE3Bf,iBAAgB,IAAAS,MAAA,CAAAlB,kBAAA,CAAOS,iBAAgB,EAAAT,kBAAA,CAAKyB,iBAAgB,EAAC,CAG7DA,iBAAgB,CAACZ,OAAO,CAAC,SAAAxC,KAAK,QAAI,CAAAmB,YAAY,CAACsB,GAAG,CAACzC,KAAK,CAAC0C,EAAE,CAAC,GAAC,CAE7DxB,UAAU,CAACK,KAAK,CAACmB,EAAE,CAAC,CAAGN,iBAAgB,CACzC,CAAE,MAAOpB,KAAK,CAAE,CACdf,OAAO,CAACe,KAAK,CAAC,kCAAkCO,KAAK,CAACC,IAAI,GAAG,CAAER,KAAK,CAAC,CACrEE,UAAU,CAACK,KAAK,CAACmB,EAAE,CAAC,CAAG,EAAE,CAC3B,CACF,CAEA5E,gBAAgB,CAACoD,UAAU,CAAC,CAC9B,CAAE,MAAOF,KAAK,CAAE,CACdf,OAAO,CAACe,KAAK,CAAC,qBAAqB,CAAEA,KAAK,CAAC,CAC7C,CAAC,OAAS,CACR9C,UAAU,CAAC,KAAK,CAAC,CACnB,CACF,CAAC,iBA7IK,CAAAyB,mBAAmBA,CAAA,SAAAQ,KAAA,CAAAmD,KAAA,MAAAC,SAAA,OA6IxB,CAED,GAAM,CAAAC,gBAAgB,CAAG,QAAnB,CAAAA,gBAAgBA,CAAIxD,KAAK,CAAK,CAClCC,OAAO,CAACC,GAAG,CAAC,gCAAgC,CAAEF,KAAK,CAACe,KAAK,CAAC,CAC1Dd,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAEF,KAAK,CAAC,CACxC1B,gBAAgB,CAAC0B,KAAK,CAAC,CACvBtB,eAAe,CAAC,IAAI,CAAC,CAGrBuB,OAAO,CAACC,GAAG,CAAC,+CAA+C,CAAC,CAC5D,GAAM,CAAAuD,MAAM,CAAGlH,aAAa,CAACmH,WAAW,CAAC1D,KAAK,CAAC,CAC/CC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAEuD,MAAM,CAAC,CAC5C,CAAC,CAED,GAAM,CAAAE,YAAY,gBAAAC,KAAA,CAAAxD,iBAAA,CAAG,UAAOyD,KAAK,CAAK,CACpC/E,cAAc,CAAC+E,KAAK,CAAC,CAErB,GAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAClD,MAAM,GAAK,CAAC,CAAE,CAC7B1B,gBAAgB,CAAC,EAAE,CAAC,CACpBI,cAAc,CAAC,KAAK,CAAC,CACrB,OACF,CAEA,GAAIuE,KAAK,CAACC,IAAI,CAAC,CAAC,CAAClD,MAAM,CAAG,CAAC,CAAE,CAC3B1B,gBAAgB,CAAC,EAAE,CAAC,CACpB,OACF,CAEAI,cAAc,CAAC,IAAI,CAAC,CACpB,GAAI,CACF,GAAM,CAAAyE,OAAO,MAAS,CAAA5H,YAAY,CAAC0H,KAAK,CAAE,CAAC,CAAC,CAC5C3E,gBAAgB,CAAC6E,OAAO,CAAC,CAC3B,CAAE,MAAO/C,KAAK,CAAE,CACdf,OAAO,CAACe,KAAK,CAAC,yBAAyB,CAAEA,KAAK,CAAC,CAC/C9B,gBAAgB,CAAC,EAAE,CAAC,CACtB,CAAC,OAAS,CACRI,cAAc,CAAC,KAAK,CAAC,CACvB,CACF,CAAC,iBAxBK,CAAAqE,YAAYA,CAAAK,EAAA,SAAAJ,KAAA,CAAAN,KAAA,MAAAC,SAAA,OAwBjB,CAED,GAAM,CAAAU,iBAAiB,CAAG,QAApB,CAAAA,iBAAiBA,CAAAC,KAAA,KAAM,CAAAC,IAAI,CAAAD,KAAA,CAAJC,IAAI,OAC/B,CAAAtH,KAAA,CAACpB,gBAAgB,EACf2I,KAAK,CAAEC,MAAM,CAACC,WAAY,CAC1BC,OAAO,CAAE,QAAT,CAAAA,OAAOA,CAAA,QAAQ,CAAAf,gBAAgB,CAACW,IAAI,CAAC,EAAC,CACtCK,aAAa,CAAE,GAAI,CAAAC,QAAA,EAEnB9H,IAAA,CAACjB,KAAK,EACJgJ,MAAM,CAAE,CACNC,GAAG,CAAE,kCAAkCR,IAAI,CAACS,WAAW,EACzD,CAAE,CACFR,KAAK,CAAEC,MAAM,CAACQ,WAAY,CAC1BC,UAAU,CAAC,OAAO,CACnB,CAAC,CAGDX,IAAI,CAACzD,YAAY,EAChB/D,IAAA,CAACtB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACU,WAAY,CAAAN,QAAA,CAC9B5H,KAAA,CAACvB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAACW,UAAW,CAAAP,QAAA,EAAC,SAC5B,CAACN,IAAI,CAACzD,YAAY,CAACuE,OAAO,CAAC,CAAC,CAAC,EAC3B,CAAC,CACH,CACP,CAGDtI,IAAA,CAACtB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACa,aAAc,CAAAT,QAAA,CAChC9H,IAAA,CAACrB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAACc,UAAW,CAACC,aAAa,CAAE,CAAE,CAAAX,QAAA,CAC9CN,IAAI,CAACpD,KAAK,CACP,CAAC,CACH,CAAC,EACS,CAAC,EACpB,CAED,GAAM,CAAAsE,kBAAkB,CAAG,QAArB,CAAAA,kBAAkBA,CAAAC,KAAA,CAAwB,IAAZ,CAAA/D,KAAK,CAAA+D,KAAA,CAAXnB,IAAI,CAEhC,GAAI,CAAAoB,QAAQ,CACZ,GAAI,CAAAC,WAAW,CAEf,GAAIjE,KAAK,CAACC,IAAI,GAAK,QAAQ,EAAID,KAAK,CAACC,IAAI,GAAK,WAAW,CAAE,CACzD+D,QAAQ,CAAG,oBAAoB,CAC/BC,WAAW,CAAG,oBAAoB,CACpC,CAAC,IAAM,CACLD,QAAQ,CAAGhE,KAAK,CAACmB,EAAE,CACnB8C,WAAW,CAAGjE,KAAK,CAACC,IAAI,CAC1B,CAEA,GAAM,CAAAiE,MAAM,CAAG5H,aAAa,CAAC0H,QAAQ,CAAC,EAAI,EAAE,CAE5C,GAAIE,MAAM,CAAC7E,MAAM,GAAK,CAAC,CAAE,MAAO,KAAI,CAEpC,MACE,CAAA/D,KAAA,CAACxB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACqB,YAAa,CAAAjB,QAAA,EAC/B5H,KAAA,CAACxB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACsB,WAAY,CAAAlB,QAAA,EAC9B9H,IAAA,CAACtB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACuB,aAAc,CAAAnB,QAAA,CAChC9H,IAAA,CAACrB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAACwB,UAAW,CAAApB,QAAA,CAC5Be,WAAW,CACR,CAAC,CACH,CAAC,CACP3I,KAAA,CAACvB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAACyB,UAAW,CAAArB,QAAA,EAAEgB,MAAM,CAAC7E,MAAM,CAAC,SAAO,EAAM,CAAC,EACzD,CAAC,CAEPjE,IAAA,CAACd,QAAQ,EACPkK,IAAI,CAAEN,MAAO,CACbO,UAAU,CAAE/B,iBAAkB,CAC9BgC,YAAY,CAAE,QAAd,CAAAA,YAAYA,CAAGjG,KAAK,QAAK,CAAAA,KAAK,CAAC0C,EAAE,CAACwD,QAAQ,CAAC,CAAC,EAAC,CAC7CC,UAAU,MACVC,8BAA8B,CAAE,KAAM,CACtCC,qBAAqB,CAAEhC,MAAM,CAACiC,SAAU,CACxCC,cAAc,CAAEtJ,YAAY,CAAG,EAAG,CAClCuJ,gBAAgB,CAAC,MAAM,CACxB,CAAC,EACE,CAAC,CAEX,CAAC,CAID,GAAM,CAAAC,oBAAoB,CAAG,QAAvB,CAAAA,oBAAoBA,CAAA,CAAS,CACjCxG,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAET,cAAc,CAACmB,MAAM,CAAC,CACvF,GAAInB,cAAc,CAACmB,MAAM,GAAK,CAAC,CAAE,CAC/BX,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC,CAC5C,MAAO,KAAI,CACb,CAEA,MACE,CAAArD,KAAA,CAACxB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACqC,eAAgB,CAAAjC,QAAA,EAClC5H,KAAA,CAACxB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACsC,cAAe,CAAAlC,QAAA,EACjC9H,IAAA,CAACrB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAACuC,aAAc,CAAAnC,QAAA,CAAC,iBAAe,CAAM,CAAC,CACzD9H,IAAA,CAACrB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAACwC,gBAAiB,CAAApC,QAAA,CAAC,wCAAsC,CAAM,CAAC,EAC/E,CAAC,CAEP9H,IAAA,CAACd,QAAQ,EACPkK,IAAI,CAAEtG,cAAe,CACrBuG,UAAU,CAAE/B,iBAAkB,CAC9BgC,YAAY,CAAE,QAAd,CAAAA,YAAYA,CAAGjG,KAAK,QAAK,CAAAA,KAAK,CAAC0C,EAAE,CAACwD,QAAQ,CAAC,CAAC,EAAC,CAC7CC,UAAU,MACVC,8BAA8B,CAAE,KAAM,CACtCC,qBAAqB,CAAEhC,MAAM,CAACiC,SAAU,CACxCC,cAAc,CAAEtJ,YAAY,CAAG,EAAG,CAClCuJ,gBAAgB,CAAC,MAAM,CACxB,CAAC,EACE,CAAC,CAEX,CAAC,CAID,GAAIvI,OAAO,CAAE,CACX,MACE,CAAApB,KAAA,CAACxB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACyC,gBAAiB,CAAArC,QAAA,EACnC9H,IAAA,CAAChB,iBAAiB,EAACoL,IAAI,CAAC,OAAO,CAACC,KAAK,CAAC,SAAS,CAAE,CAAC,CAClDrK,IAAA,CAACrB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAAC4C,WAAY,CAAAxC,QAAA,CAAC,mBAAiB,CAAM,CAAC,EACrD,CAAC,CAEX,CAEA,MACE,CAAA5H,KAAA,CAACb,YAAY,EAACoI,KAAK,CAAEC,MAAM,CAAC6C,SAAU,CAAAzC,QAAA,EAEpC5H,KAAA,CAACxB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAAC8C,UAAW,CAAA1C,QAAA,EAC7B9H,IAAA,CAACrB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAAC+C,SAAU,CAAA3C,QAAA,CAAC,MAAI,CAAM,CAAC,CAC1C5H,KAAA,CAACxB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACgD,eAAgB,CAAA5C,QAAA,EAClC9H,IAAA,CAACb,SAAS,EACRsI,KAAK,CAAEC,MAAM,CAACiD,WAAY,CAC1BC,WAAW,CAAC,kBAAkB,CAC9BC,oBAAoB,CAAC,MAAM,CAC3BC,KAAK,CAAE5I,WAAY,CACnB6I,YAAY,CAAE/D,YAAa,CAC3BgE,cAAc,CAAC,MAAM,CACrBC,WAAW,CAAE,KAAM,CACpB,CAAC,CACDvI,WAAW,EACV1C,IAAA,CAAChB,iBAAiB,EAACoL,IAAI,CAAC,OAAO,CAACC,KAAK,CAAC,MAAM,CAAC5C,KAAK,CAAEC,MAAM,CAACwD,aAAc,CAAE,CAC5E,EACG,CAAC,EAKH,CAAC,CAGNhJ,WAAW,CAACiF,IAAI,CAAC,CAAC,CAAClD,MAAM,CAAG,CAAC,EAAI3B,aAAa,CAAC2B,MAAM,CAAG,CAAC,EACxDjE,IAAA,CAACtB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAACyD,qBAAsB,CAAArD,QAAA,CACxC9H,IAAA,CAACtB,IAAI,EAAC+I,KAAK,CAAEC,MAAM,CAAC0D,cAAe,CAAAtD,QAAA,CACjC9H,IAAA,CAACd,QAAQ,EACPkK,IAAI,CAAE9G,aAAa,CAAC0B,KAAK,CAAC,CAAC,CAAE,CAAC,CAAE,CAChCqF,UAAU,CAAE,QAAZ,CAAAA,UAAUA,CAAAgC,KAAA,KAAK,CAAA7D,IAAI,CAAA6D,KAAA,CAAJ7D,IAAI,OACjB,CAAAtH,KAAA,CAACpB,gBAAgB,EACf2I,KAAK,CAAEC,MAAM,CAAC4D,gBAAiB,CAC/B1D,OAAO,CAAE,QAAT,CAAAA,OAAOA,CAAA,CAAQ,CACbzF,cAAc,CAAC,EAAE,CAAC,CAClBI,gBAAgB,CAAC,EAAE,CAAC,CACpBsE,gBAAgB,CAACW,IAAI,CAAC,CACxB,CAAE,CAAAM,QAAA,EAEF9H,IAAA,CAACrB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAAC6D,iBAAkB,CAAAzD,QAAA,CAAEN,IAAI,CAACpD,KAAK,CAAO,CAAC,CAC1DpE,IAAA,CAACrB,IAAI,EAAC8I,KAAK,CAAEC,MAAM,CAAC8D,gBAAiB,CAAA1D,QAAA,CAClC,GAAI,CAAA2D,IAAI,CAACjE,IAAI,CAACkE,YAAY,CAAC,CAACC,WAAW,CAAC,CAAC,CACtC,CAAC,EACS,CAAC,EACnB,CACFrC,YAAY,CAAE,QAAd,CAAAA,YAAYA,CAAG9B,IAAI,QAAK,CAAAA,IAAI,CAACzB,EAAE,CAACwD,QAAQ,CAAC,CAAC,EAAC,CAC3CqC,4BAA4B,CAAE,KAAM,CACpCC,mBAAmB,CAAE,IAAK,CAC3B,CAAC,CACE,CAAC,CACH,CACP,CAGD7L,IAAA,CAACd,QAAQ,EACPkK,IAAI,EAAG,UAAU,EAAAlD,MAAA,CAAAlB,kBAAA,CAAKlE,MAAM,EAAE,CAC9BuI,UAAU,CAAE,QAAZ,CAAAA,UAAUA,CAAAyC,KAAA,CAAuB,IAAlB,CAAAtE,IAAI,CAAAsE,KAAA,CAAJtE,IAAI,CAAEnB,KAAK,CAAAyF,KAAA,CAALzF,KAAK,CACxB,GAAImB,IAAI,GAAK,UAAU,CAAE,CACvB,MAAO,CAAAsC,oBAAoB,CAAC,CAAC,CAC/B,CACA,MAAO,CAAApB,kBAAkB,CAAC,CAAElB,IAAI,CAAJA,IAAK,CAAC,CAAC,CACrC,CAAE,CACF8B,YAAY,CAAE,QAAd,CAAAA,YAAYA,CAAG9B,IAAI,CAAEnB,KAAK,CAAK,CAC7B,GAAImB,IAAI,GAAK,UAAU,CAAE,MAAO,UAAU,CAC1C,MAAO,CAAAA,IAAI,CAACzB,EAAE,CAACwD,QAAQ,CAAC,CAAC,CAC3B,CAAE,CACFqC,4BAA4B,CAAE,KAAM,CACpClC,qBAAqB,CAAEhC,MAAM,CAACqE,UAAW,CACzCC,SAAS,CAAEhJ,mBAAoB,CAC/BiJ,UAAU,CAAE3K,OAAQ,CACrB,CAAC,CAEFtB,IAAA,CAACH,UAAU,EACTqM,OAAO,CAAEpK,YAAa,CACtBuB,KAAK,CAAE3B,aAAc,CACrByK,OAAO,CAAE,QAAT,CAAAA,OAAOA,CAAA,CAAQ,CACbpK,eAAe,CAAC,KAAK,CAAC,CACtBJ,gBAAgB,CAAC,IAAI,CAAC,CACxB,CAAE,CACH,CAAC,EACU,CAAC,CAEnB,CAEA,GAAM,CAAA+F,MAAM,CAAG9I,UAAU,CAACwN,MAAM,CAAC,CAC/B7B,SAAS,CAAE,CACT8B,IAAI,CAAE,CAAC,CACPC,eAAe,CAAE,SACnB,CAAC,CACDnC,gBAAgB,CAAE,CAChBkC,IAAI,CAAE,CAAC,CACPE,cAAc,CAAE,QAAQ,CACxBC,UAAU,CAAE,QAAQ,CACpBF,eAAe,CAAE,SACnB,CAAC,CACDhC,WAAW,CAAE,CACXD,KAAK,CAAE,MAAM,CACboC,SAAS,CAAE,EAAE,CACbC,QAAQ,CAAE,EACZ,CAAC,CACDlC,UAAU,CAAE,CACV8B,eAAe,CAAE,SAAS,CAC1BK,UAAU,CAAE,EAAE,CACdC,aAAa,CAAE,EAAE,CACjBC,iBAAiB,CAAE,EAAE,CACrBC,SAAS,CAAE,CAAC,CACZC,WAAW,CAAE,MAAM,CACnBC,YAAY,CAAE,CAAE3M,KAAK,CAAE,CAAC,CAAE4M,MAAM,CAAE,CAAE,CAAC,CACrCC,aAAa,CAAE,IAAI,CACnBC,YAAY,CAAE,IAChB,CAAC,CACD1C,SAAS,CAAE,CACTiC,QAAQ,CAAE,EAAE,CACZU,UAAU,CAAE,MAAM,CAClB/C,KAAK,CAAE,MAAM,CACbgD,SAAS,CAAE,QAAQ,CACnBC,YAAY,CAAE,EAAE,CAChBC,aAAa,CAAE,CACjB,CAAC,CACD7C,eAAe,CAAE,CACf8C,QAAQ,CAAE,UAAU,CACpBC,MAAM,CAAE,IACV,CAAC,CAGD9C,WAAW,CAAE,CACX2B,eAAe,CAAE,MAAM,CACvBoB,YAAY,CAAE,EAAE,CAChBb,iBAAiB,CAAE,EAAE,CACrBc,eAAe,CAAE,EAAE,CACnBjB,QAAQ,CAAE,EAAE,CACZrC,KAAK,CAAE,MAAM,CACbyC,SAAS,CAAE,CAAC,CACZC,WAAW,CAAE,MAAM,CACnBC,YAAY,CAAE,CAAE3M,KAAK,CAAE,CAAC,CAAE4M,MAAM,CAAE,CAAE,CAAC,CACrCC,aAAa,CAAE,GAAG,CAClBC,YAAY,CAAE,CAChB,CAAC,CACDjC,aAAa,CAAE,CACbsC,QAAQ,CAAE,UAAU,CACpBI,KAAK,CAAE,EAAE,CACTC,GAAG,CAAE,EACP,CAAC,CACD1C,qBAAqB,CAAE,CACrBqC,QAAQ,CAAE,UAAU,CACpBK,GAAG,CAAE,CAAC,CACNC,IAAI,CAAE,CAAC,CACPF,KAAK,CAAE,CAAC,CACRH,MAAM,CAAE,MAAM,CACdX,SAAS,CAAE,MAAM,CACjBiB,aAAa,CAAE,UACjB,CAAC,CACD3C,cAAc,CAAE,CACdoC,QAAQ,CAAE,UAAU,CACpBK,GAAG,CAAE,GAAG,CACRC,IAAI,CAAE,EAAE,CACRF,KAAK,CAAE,EAAE,CACTtB,eAAe,CAAE,MAAM,CACvBoB,YAAY,CAAE,EAAE,CAChBZ,SAAS,CAAE,CAAC,CACZC,WAAW,CAAE,MAAM,CACnBC,YAAY,CAAE,CAAE3M,KAAK,CAAE,CAAC,CAAE4M,MAAM,CAAE,CAAE,CAAC,CACrCC,aAAa,CAAE,GAAG,CAClBC,YAAY,CAAE,CAAC,CACfa,SAAS,CAAE,GAAG,CACdP,MAAM,CAAE,MACV,CAAC,CACDnC,gBAAgB,CAAE,CAChBuB,iBAAiB,CAAE,EAAE,CACrBc,eAAe,CAAE,EAAE,CACnBM,iBAAiB,CAAE,CAAC,CACpBC,iBAAiB,CAAE,SAAS,CAC5BC,aAAa,CAAE,KAAK,CACpB5B,cAAc,CAAE,eAAe,CAC/BC,UAAU,CAAE,QACd,CAAC,CACDjB,iBAAiB,CAAE,CACjBmB,QAAQ,CAAE,EAAE,CACZrC,KAAK,CAAE,MAAM,CACb+C,UAAU,CAAE,KAAK,CACjBf,IAAI,CAAE,CACR,CAAC,CACDb,gBAAgB,CAAE,CAChBkB,QAAQ,CAAE,EAAE,CACZrC,KAAK,CAAE,MAAM,CACb+D,UAAU,CAAE,EACd,CAAC,CAEDrE,eAAe,CAAE,CACfuD,YAAY,CAAE,EAChB,CAAC,CACDtD,cAAc,CAAE,CACd6C,iBAAiB,CAAE,EAAE,CACrBS,YAAY,CAAE,EAAE,CAChBd,UAAU,CAAE,QACd,CAAC,CACDvC,aAAa,CAAE,CACbyC,QAAQ,CAAE,EAAE,CACZU,UAAU,CAAE,MAAM,CAClB/C,KAAK,CAAE,MAAM,CACbiD,YAAY,CAAE,CAChB,CAAC,CACDpD,gBAAgB,CAAE,CAChBwC,QAAQ,CAAE,EAAE,CACZrC,KAAK,CAAE,MAAM,CACbgD,SAAS,CAAE,QACb,CAAC,CACDtB,UAAU,CAAE,CACVa,aAAa,CAAE,EACjB,CAAC,CACD7D,YAAY,CAAE,CACZuE,YAAY,CAAE,EAChB,CAAC,CACDtE,WAAW,CAAE,CACXmF,aAAa,CAAE,KAAK,CACpB5B,cAAc,CAAE,eAAe,CAC/BC,UAAU,CAAE,QAAQ,CACpBK,iBAAiB,CAAE,EAAE,CACrBS,YAAY,CAAE,EAChB,CAAC,CACDrE,aAAa,CAAE,CACbkF,aAAa,CAAE,KAAK,CACpB3B,UAAU,CAAE,QACd,CAAC,CACDtD,UAAU,CAAE,CACVwD,QAAQ,CAAE,EAAE,CACZU,UAAU,CAAE,MAAM,CAClB/C,KAAK,CAAE,MAAM,CACbgE,WAAW,CAAE,EACf,CAAC,CAEDlF,UAAU,CAAE,CACVuD,QAAQ,CAAE,EAAE,CACZrC,KAAK,CAAE,MACT,CAAC,CACDV,SAAS,CAAE,CACTkD,iBAAiB,CAAE,EACrB,CAAC,CACDlF,WAAW,CAAE,CACXtH,KAAK,CAAEC,YAAY,CACnB2M,MAAM,CAAE1M,aAAa,CACrB8N,WAAW,CAAE,EAAE,CACfX,YAAY,CAAE,EAAE,CAChBY,QAAQ,CAAE,QAAQ,CAClBxB,SAAS,CAAE,CAAC,CACZC,WAAW,CAAE,MAAM,CACnBC,YAAY,CAAE,CAAE3M,KAAK,CAAE,CAAC,CAAE4M,MAAM,CAAE,CAAE,CAAC,CACrCC,aAAa,CAAE,IAAI,CACnBC,YAAY,CAAE,IAAI,CAClBK,QAAQ,CAAE,UACZ,CAAC,CACDtF,WAAW,CAAE,CACX7H,KAAK,CAAE,MAAM,CACb4M,MAAM,CAAE,MACV,CAAC,CACD7E,WAAW,CAAE,CACXoF,QAAQ,CAAE,UAAU,CACpBK,GAAG,CAAE,CAAC,CACND,KAAK,CAAE,CAAC,CACRtB,eAAe,CAAE,iBAAiB,CAClCO,iBAAiB,CAAE,CAAC,CACpBc,eAAe,CAAE,CAAC,CAClBD,YAAY,CAAE,EAAE,CAChBa,WAAW,CAAE,CAAC,CACdC,WAAW,CAAE,SACf,CAAC,CACDnG,UAAU,CAAE,CACVqE,QAAQ,CAAE,EAAE,CACZU,UAAU,CAAE,MAAM,CAClB/C,KAAK,CAAE,SACT,CAAC,CACD9B,aAAa,CAAE,CACbiF,QAAQ,CAAE,UAAU,CACpBiB,MAAM,CAAE,CAAC,CACTX,IAAI,CAAE,CAAC,CACPF,KAAK,CAAE,CAAC,CACRtB,eAAe,CAAE,iBAAiB,CAClCoC,OAAO,CAAE,EACX,CAAC,CACDlG,UAAU,CAAE,CACVkE,QAAQ,CAAE,EAAE,CACZU,UAAU,CAAE,MAAM,CAClB/C,KAAK,CAAE,MAAM,CACbiD,YAAY,CAAE,CAAC,CACfD,SAAS,CAAE,QAAQ,CACnBsB,UAAU,CAAE,EACd,CAAC,CACDC,SAAS,CAAE,CACTT,aAAa,CAAE,KAAK,CACpB5B,cAAc,CAAE,eAAe,CAC/BC,UAAU,CAAE,QACd,CAAC,CACDqC,SAAS,CAAE,CACTnC,QAAQ,CAAE,EAAE,CACZrC,KAAK,CAAE,MAAM,CACb+C,UAAU,CAAE,KACd,CAAC,CACD0B,WAAW,CAAE,CACXpC,QAAQ,CAAE,EAAE,CACZrC,KAAK,CAAE,SAAS,CAChB+C,UAAU,CAAE,MACd,CAEF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}