{"ast":null,"code":"import _classCallCheck from\"@babel/runtime/helpers/classCallCheck\";import _createClass from\"@babel/runtime/helpers/createClass\";import io from'socket.io-client';var SocketService=function(){function SocketService(){_classCallCheck(this,SocketService);this.socket=null;this.isConnected=false;this.roomId=null;this.onMovieSelectedCallback=null;}return _createClass(SocketService,[{key:\"connect\",value:function connect(){var _this=this;var roomId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'default-room';try{var SOCKET_SERVER_URL='http://192.168.1.99:3001';this.socket=io(SOCKET_SERVER_URL,{transports:['websocket'],autoConnect:true});this.roomId=roomId;this.socket.on('connect',function(){console.log('Connected to socket server');_this.isConnected=true;_this.socket.emit('join-room',{roomId:_this.roomId});if(_this.onConnectCallback){_this.onConnectCallback();}});this.socket.on('disconnect',function(){console.log('Disconnected from socket server');_this.isConnected=false;if(_this.onDisconnectCallback){_this.onDisconnectCallback();}});this.socket.on('error',function(error){console.error('Socket error:',error);});this.socket.on('movie-selected',function(data){console.log('üé¨ MOVIE SELECTED EVENT RECEIVED!');console.log('Event data:',data);console.log('Callback exists:',!!_this.onMovieSelectedCallback);if(_this.onMovieSelectedCallback){console.log('Calling movie selection callback...');_this.onMovieSelectedCallback(data.movie);}else{console.log('‚ùå No movie selection callback set!');}});this.socket.on('room-joined',function(data){console.log('Joined room:',data.roomId);});this.socket.on('client-joined',function(data){console.log('Client joined room:',data.clientId);});this.socket.on('client-left',function(data){console.log('Client left room:',data.clientId);});}catch(error){console.error('Error connecting to socket server:',error);}}},{key:\"disconnect\",value:function disconnect(){if(this.socket){this.socket.disconnect();this.socket=null;this.isConnected=false;}}},{key:\"selectMovie\",value:function selectMovie(movie){console.log('üì° selectMovie called with:',movie.title);console.log('Socket exists:',!!this.socket);console.log('Socket connected:',this.isConnected);console.log('Room ID:',this.roomId);if(this.socket&&this.isConnected){var data={roomId:this.roomId,movie:movie,timestamp:Date.now(),clientId:this.socket.id};console.log('üì§ Emitting select-movie event with data:',data);this.socket.emit('select-movie',data);console.log('‚úÖ Movie selection event emitted');return true;}else{console.warn('‚ùå Socket not connected. Cannot send movie selection.');return false;}}},{key:\"onMovieSelected\",value:function onMovieSelected(callback){this.onMovieSelectedCallback=callback;}},{key:\"onConnect\",value:function onConnect(callback){this.onConnectCallback=callback;}},{key:\"onDisconnect\",value:function onDisconnect(callback){this.onDisconnectCallback=callback;}},{key:\"getConnectionStatus\",value:function getConnectionStatus(){return this.isConnected;}},{key:\"getRoomId\",value:function getRoomId(){return this.roomId;}},{key:\"changeRoom\",value:function changeRoom(newRoomId){if(this.socket&&this.isConnected){this.socket.emit('leave-room',{roomId:this.roomId});this.roomId=newRoomId;this.socket.emit('join-room',{roomId:this.roomId});console.log('Changed to room:',newRoomId);}}},{key:\"sendMessage\",value:function sendMessage(message){if(this.socket&&this.isConnected){var data={roomId:this.roomId,message:message,timestamp:Date.now(),clientId:this.socket.id};this.socket.emit('send-message',data);}}},{key:\"onMessage\",value:function onMessage(callback){if(this.socket){this.socket.on('receive-message',callback);}}}]);}();export var socketService=new SocketService();","map":{"version":3,"names":["io","SocketService","_classCallCheck","socket","isConnected","roomId","onMovieSelectedCallback","_createClass","key","value","connect","_this","arguments","length","undefined","SOCKET_SERVER_URL","transports","autoConnect","on","console","log","emit","onConnectCallback","onDisconnectCallback","error","data","movie","clientId","disconnect","selectMovie","title","timestamp","Date","now","id","warn","onMovieSelected","callback","onConnect","onDisconnect","getConnectionStatus","getRoomId","changeRoom","newRoomId","sendMessage","message","onMessage","socketService"],"sources":["/Users/francescaforzoni/Downloads/Dad_MagicApp_002/src/services/socketService.js"],"sourcesContent":["import io from 'socket.io-client';\n\nclass SocketService {\n  constructor() {\n    this.socket = null;\n    this.isConnected = false;\n    this.roomId = null;\n    this.onMovieSelectedCallback = null;\n  }\n\n  // Connect to the socket server\n  connect(roomId = 'default-room') {\n    try {\n      // Use the computer's IP address for network access\n      const SOCKET_SERVER_URL = 'http://192.168.1.99:3001';\n      \n      this.socket = io(SOCKET_SERVER_URL, {\n        transports: ['websocket'],\n        autoConnect: true,\n      });\n\n      this.roomId = roomId;\n\n      this.socket.on('connect', () => {\n        console.log('Connected to socket server');\n        this.isConnected = true;\n        \n        // Join the room\n        this.socket.emit('join-room', { roomId: this.roomId });\n        \n        // Call connect callback if set\n        if (this.onConnectCallback) {\n          this.onConnectCallback();\n        }\n      });\n\n      this.socket.on('disconnect', () => {\n        console.log('Disconnected from socket server');\n        this.isConnected = false;\n        \n        // Call disconnect callback if set\n        if (this.onDisconnectCallback) {\n          this.onDisconnectCallback();\n        }\n      });\n\n      this.socket.on('error', (error) => {\n        console.error('Socket error:', error);\n      });\n\n      // Listen for movie selection from other clients\n      this.socket.on('movie-selected', (data) => {\n        console.log('üé¨ MOVIE SELECTED EVENT RECEIVED!');\n        console.log('Event data:', data);\n        console.log('Callback exists:', !!this.onMovieSelectedCallback);\n        \n        if (this.onMovieSelectedCallback) {\n          console.log('Calling movie selection callback...');\n          this.onMovieSelectedCallback(data.movie);\n        } else {\n          console.log('‚ùå No movie selection callback set!');\n        }\n      });\n\n      // Listen for room join confirmation\n      this.socket.on('room-joined', (data) => {\n        console.log('Joined room:', data.roomId);\n      });\n\n      // Listen for other clients joining the room\n      this.socket.on('client-joined', (data) => {\n        console.log('Client joined room:', data.clientId);\n      });\n\n      // Listen for other clients leaving the room\n      this.socket.on('client-left', (data) => {\n        console.log('Client left room:', data.clientId);\n      });\n\n    } catch (error) {\n      console.error('Error connecting to socket server:', error);\n    }\n  }\n\n  // Disconnect from the socket server\n  disconnect() {\n    if (this.socket) {\n      this.socket.disconnect();\n      this.socket = null;\n      this.isConnected = false;\n    }\n  }\n\n  // Send movie selection to other clients in the room\n  selectMovie(movie) {\n    console.log('üì° selectMovie called with:', movie.title);\n    console.log('Socket exists:', !!this.socket);\n    console.log('Socket connected:', this.isConnected);\n    console.log('Room ID:', this.roomId);\n    \n    if (this.socket && this.isConnected) {\n      const data = {\n        roomId: this.roomId,\n        movie: movie,\n        timestamp: Date.now(),\n        clientId: this.socket.id,\n      };\n      \n      console.log('üì§ Emitting select-movie event with data:', data);\n      this.socket.emit('select-movie', data);\n      console.log('‚úÖ Movie selection event emitted');\n      return true;\n    } else {\n      console.warn('‚ùå Socket not connected. Cannot send movie selection.');\n      return false;\n    }\n  }\n\n  // Set callback for when a movie is selected by another client\n  onMovieSelected(callback) {\n    this.onMovieSelectedCallback = callback;\n  }\n\n  // Set callback for when connected\n  onConnect(callback) {\n    this.onConnectCallback = callback;\n  }\n\n  // Set callback for when disconnected\n  onDisconnect(callback) {\n    this.onDisconnectCallback = callback;\n  }\n\n  // Get connection status\n  getConnectionStatus() {\n    return this.isConnected;\n  }\n\n  // Get current room ID\n  getRoomId() {\n    return this.roomId;\n  }\n\n  // Change room\n  changeRoom(newRoomId) {\n    if (this.socket && this.isConnected) {\n      // Leave current room\n      this.socket.emit('leave-room', { roomId: this.roomId });\n      \n      // Join new room\n      this.roomId = newRoomId;\n      this.socket.emit('join-room', { roomId: this.roomId });\n      \n      console.log('Changed to room:', newRoomId);\n    }\n  }\n\n  // Send custom message to room\n  sendMessage(message) {\n    if (this.socket && this.isConnected) {\n      const data = {\n        roomId: this.roomId,\n        message: message,\n        timestamp: Date.now(),\n        clientId: this.socket.id,\n      };\n      \n      this.socket.emit('send-message', data);\n    }\n  }\n\n  // Listen for custom messages\n  onMessage(callback) {\n    if (this.socket) {\n      this.socket.on('receive-message', callback);\n    }\n  }\n}\n\n// Export a singleton instance\nexport const socketService = new SocketService();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}