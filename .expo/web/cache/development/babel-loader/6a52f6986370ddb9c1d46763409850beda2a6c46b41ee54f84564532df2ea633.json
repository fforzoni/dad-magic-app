{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('Home'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentScreen = _useState2[0],\n    setCurrentScreen = _useState2[1];\n  useEffect(function () {\n    if (Platform.OS === 'web') {\n      var updateScreen = function updateScreen() {\n        var path = window.location.pathname;\n        console.log('üîç URL changed to:', path);\n        var screen = 'Home';\n        if (path === '/Magician') {\n          screen = 'Magician';\n        } else if (path === '/Genre') {\n          screen = 'Genre';\n        } else if (path === '/MovieDetail') {\n          screen = 'MovieDetail';\n        }\n        console.log('üéØ Setting screen to:', screen);\n        setCurrentScreen(screen);\n      };\n      updateScreen();\n      window.addEventListener('popstate', updateScreen);\n      var interval = setInterval(updateScreen, 1000);\n      return function () {\n        window.removeEventListener('popstate', updateScreen);\n        clearInterval(interval);\n      };\n    }\n  }, []);\n  var renderScreen = function renderScreen() {\n    console.log('üé¨ Rendering screen:', currentScreen);\n    switch (currentScreen) {\n      case 'Magician':\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"\\uD83C\\uDFA9 MAGICIAN VIEW\"\n          }), _jsx(Text, {\n            style: styles.subtitle,\n            children: \"This is the magician screen!\"\n          }), _jsxs(Text, {\n            style: styles.debug,\n            children: [\"Current Screen: \", currentScreen]\n          }), _jsxs(Text, {\n            style: styles.debug,\n            children: [\"URL: \", Platform.OS === 'web' ? window.location.pathname : 'N/A']\n          })]\n        });\n      case 'Genre':\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"\\uD83C\\uDFAD GENRE VIEW\"\n          }), _jsx(Text, {\n            style: styles.subtitle,\n            children: \"This is the genre screen!\"\n          })]\n        });\n      case 'MovieDetail':\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"\\uD83C\\uDFAC MOVIE DETAIL VIEW\"\n          }), _jsx(Text, {\n            style: styles.subtitle,\n            children: \"This is the movie detail screen!\"\n          })]\n        });\n      default:\n        return _jsxs(View, {\n          style: styles.container,\n          children: [_jsx(Text, {\n            style: styles.title,\n            children: \"\\uD83C\\uDFE0 HOME VIEW\"\n          }), _jsx(Text, {\n            style: styles.subtitle,\n            children: \"This is the home screen!\"\n          }), _jsxs(Text, {\n            style: styles.debug,\n            children: [\"Current Screen: \", currentScreen]\n          }), _jsxs(Text, {\n            style: styles.debug,\n            children: [\"URL: \", Platform.OS === 'web' ? window.location.pathname : 'N/A']\n          })]\n        });\n    }\n  };\n  return _jsxs(SafeAreaProvider, {\n    children: [Platform.OS === 'web' && _jsxs(View, {\n      style: styles.debugBox,\n      children: [_jsxs(Text, {\n        style: styles.debugText,\n        children: [\"Current Screen: \", currentScreen]\n      }), _jsxs(Text, {\n        style: styles.debugText,\n        children: [\"URL: \", Platform.OS === 'web' ? window.location.pathname : 'N/A']\n      })]\n    }), renderScreen(), _jsx(StatusBar, {\n      style: \"light\"\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1a1a1a',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  subtitle: {\n    fontSize: 18,\n    color: '#cccccc',\n    marginBottom: 20,\n    textAlign: 'center'\n  },\n  debug: {\n    fontSize: 14,\n    color: '#888888',\n    marginBottom: 10,\n    textAlign: 'center'\n  },\n  debugBox: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    backgroundColor: 'red',\n    padding: 10,\n    zIndex: 9999\n  },\n  debugText: {\n    color: 'white',\n    fontSize: 12,\n    marginBottom: 5\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","StatusBar","SafeAreaProvider","Platform","View","Text","StyleSheet","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","currentScreen","setCurrentScreen","OS","updateScreen","path","window","location","pathname","console","log","screen","addEventListener","interval","setInterval","removeEventListener","clearInterval","renderScreen","style","styles","container","children","title","subtitle","debug","debugBox","debugText","create","flex","backgroundColor","justifyContent","alignItems","padding","fontSize","fontWeight","color","marginBottom","textAlign","position","top","left","zIndex"],"sources":["/Users/francescaforzoni/Downloads/Dad_MagicApp_002/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Platform, View, Text, StyleSheet } from 'react-native';\n\nexport default function App() {\n  const [currentScreen, setCurrentScreen] = useState('Home');\n\n  useEffect(() => {\n    // Handle URL routing for web\n    if (Platform.OS === 'web') {\n      const updateScreen = () => {\n        const path = window.location.pathname;\n        console.log('üîç URL changed to:', path);\n        \n        let screen = 'Home';\n        if (path === '/Magician') {\n          screen = 'Magician';\n        } else if (path === '/Genre') {\n          screen = 'Genre';\n        } else if (path === '/MovieDetail') {\n          screen = 'MovieDetail';\n        }\n        \n        console.log('üéØ Setting screen to:', screen);\n        setCurrentScreen(screen);\n      };\n\n      // Set initial screen\n      updateScreen();\n\n      // Listen for URL changes\n      window.addEventListener('popstate', updateScreen);\n      \n      // Also check URL periodically in case direct navigation doesn't trigger popstate\n      const interval = setInterval(updateScreen, 1000);\n      \n      return () => {\n        window.removeEventListener('popstate', updateScreen);\n        clearInterval(interval);\n      };\n    }\n  }, []);\n\n  const renderScreen = () => {\n    console.log('üé¨ Rendering screen:', currentScreen);\n    \n    switch (currentScreen) {\n      case 'Magician':\n        return (\n          <View style={styles.container}>\n            <Text style={styles.title}>üé© MAGICIAN VIEW</Text>\n            <Text style={styles.subtitle}>This is the magician screen!</Text>\n            <Text style={styles.debug}>Current Screen: {currentScreen}</Text>\n            <Text style={styles.debug}>URL: {Platform.OS === 'web' ? window.location.pathname : 'N/A'}</Text>\n          </View>\n        );\n      case 'Genre':\n        return (\n          <View style={styles.container}>\n            <Text style={styles.title}>üé≠ GENRE VIEW</Text>\n            <Text style={styles.subtitle}>This is the genre screen!</Text>\n          </View>\n        );\n      case 'MovieDetail':\n        return (\n          <View style={styles.container}>\n            <Text style={styles.title}>üé¨ MOVIE DETAIL VIEW</Text>\n            <Text style={styles.subtitle}>This is the movie detail screen!</Text>\n          </View>\n        );\n      default:\n        return (\n          <View style={styles.container}>\n            <Text style={styles.title}>üè† HOME VIEW</Text>\n            <Text style={styles.subtitle}>This is the home screen!</Text>\n            <Text style={styles.debug}>Current Screen: {currentScreen}</Text>\n            <Text style={styles.debug}>URL: {Platform.OS === 'web' ? window.location.pathname : 'N/A'}</Text>\n          </View>\n        );\n    }\n  };\n\n  return (\n    <SafeAreaProvider>\n      {/* Debug info - remove this later */}\n      {Platform.OS === 'web' && (\n        <View style={styles.debugBox}>\n          <Text style={styles.debugText}>Current Screen: {currentScreen}</Text>\n          <Text style={styles.debugText}>URL: {Platform.OS === 'web' ? window.location.pathname : 'N/A'}</Text>\n        </View>\n      )}\n      \n      {renderScreen()}\n      <StatusBar style=\"light\" />\n    </SafeAreaProvider>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#1a1a1a',\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n  },\n  title: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#ffffff',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  subtitle: {\n    fontSize: 18,\n    color: '#cccccc',\n    marginBottom: 20,\n    textAlign: 'center',\n  },\n  debug: {\n    fontSize: 14,\n    color: '#888888',\n    marginBottom: 10,\n    textAlign: 'center',\n  },\n  debugBox: {\n    position: 'fixed',\n    top: 0,\n    left: 0,\n    backgroundColor: 'red',\n    padding: 10,\n    zIndex: 9999,\n  },\n  debugText: {\n    color: 'white',\n    fontSize: 12,\n    marginBottom: 5,\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}