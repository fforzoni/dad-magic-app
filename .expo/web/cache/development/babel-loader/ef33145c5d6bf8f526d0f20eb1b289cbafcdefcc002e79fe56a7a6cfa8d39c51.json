{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { getGenres, getMoviesByGenre, searchMovies, getTopRatedMovies } from \"../services/tmdbService\";\nimport { socketService } from \"../services/socketService\";\nimport MovieModal from \"../components/MovieModal\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar POSTER_WIDTH = 156;\nvar POSTER_HEIGHT = 234;\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    genres = _useState2[0],\n    setGenres = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    moviesByGenre = _useState4[0],\n    setMoviesByGenre = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedMovie = _useState8[0],\n    setSelectedMovie = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    modalVisible = _useState0[0],\n    setModalVisible = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    searchQuery = _useState10[0],\n    setSearchQuery = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    searchResults = _useState12[0],\n    setSearchResults = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isSearching = _useState14[0],\n    setIsSearching = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    featuredMovies = _useState16[0],\n    setFeaturedMovies = _useState16[1];\n  useEffect(function () {\n    loadGenresAndMovies();\n    setupSocketConnection();\n    return function () {\n      socketService.disconnect();\n    };\n  }, []);\n  var setupSocketConnection = function setupSocketConnection() {\n    socketService.connect();\n    socketService.onMovieSelected(function (movie) {\n      console.log('Movie selected by customer:', movie);\n    });\n  };\n  var loadGenresAndMovies = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        try {\n          var topMovies = yield getTopRatedMovies(1, 20);\n          var recentTopMovies = topMovies.filter(function (movie) {\n            return new Date(movie.release_date) >= new Date('2020-01-01');\n          }).sort(function (a, b) {\n            return b.vote_average - a.vote_average;\n          }).slice(0, 5);\n          setFeaturedMovies(recentTopMovies);\n        } catch (error) {\n          console.error('Error loading featured movies:', error);\n          setFeaturedMovies([]);\n        }\n        var genresData = yield getGenres();\n        setGenres(genresData);\n        var moviesData = {};\n        for (var genre of genresData) {\n          try {\n            var movies = yield getMoviesByGenre(genre.id, 1, 50);\n            moviesData[genre.id] = movies;\n          } catch (error) {\n            console.error(`Error loading movies for genre ${genre.name}:`, error);\n            moviesData[genre.id] = [];\n          }\n        }\n        setMoviesByGenre(moviesData);\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadGenresAndMovies() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleMoviePress = function handleMoviePress(movie) {\n    setSelectedMovie(movie);\n    setModalVisible(true);\n    socketService.selectMovie(movie);\n  };\n  var handleSearch = function () {\n    var _ref3 = _asyncToGenerator(function* (query) {\n      setSearchQuery(query);\n      if (query.trim().length === 0) {\n        setSearchResults([]);\n        setIsSearching(false);\n        return;\n      }\n      if (query.trim().length < 2) return;\n      setIsSearching(true);\n      try {\n        var results = yield searchMovies(query, 1);\n        setSearchResults(results);\n      } catch (error) {\n        console.error('Error searching movies:', error);\n        setSearchResults([]);\n      } finally {\n        setIsSearching(false);\n      }\n    });\n    return function handleSearch(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderMoviePoster = function renderMoviePoster(_ref4) {\n    var item = _ref4.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.moviePoster,\n      onPress: function onPress() {\n        return handleMoviePress(item);\n      },\n      activeOpacity: 0.7,\n      children: [_jsx(Image, {\n        source: {\n          uri: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n        },\n        style: styles.posterImage,\n        resizeMode: \"cover\"\n      }), item.vote_average && _jsx(View, {\n        style: styles.ratingBadge,\n        children: _jsxs(Text, {\n          style: styles.ratingText,\n          children: [\"\\u2605 \", item.vote_average.toFixed(1)]\n        })\n      }), _jsxs(View, {\n        style: styles.posterOverlay,\n        children: [_jsx(Text, {\n          style: styles.movieTitle,\n          numberOfLines: 2,\n          children: item.title\n        }), _jsxs(View, {\n          style: styles.movieMeta,\n          children: [_jsx(Text, {\n            style: styles.movieYear,\n            children: new Date(item.release_date).getFullYear()\n          }), item.vote_average && _jsxs(Text, {\n            style: styles.movieRating,\n            children: [\"\\u2605 \", item.vote_average.toFixed(1)]\n          })]\n        })]\n      })]\n    });\n  };\n  var renderGenreSection = function renderGenreSection(_ref5) {\n    var genre = _ref5.item;\n    var movies = moviesByGenre[genre.id] || [];\n    if (movies.length === 0) return null;\n    return _jsxs(View, {\n      style: styles.genreSection,\n      children: [_jsxs(View, {\n        style: styles.genreHeader,\n        children: [_jsx(Text, {\n          style: styles.genreTitle,\n          children: genre.name\n        }), _jsxs(Text, {\n          style: styles.movieCount,\n          children: [movies.length, \" movies\"]\n        })]\n      }), _jsx(FlatList, {\n        data: movies,\n        renderItem: renderMoviePoster,\n        keyExtractor: function keyExtractor(movie) {\n          return movie.id.toString();\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.moviesRow,\n        snapToInterval: POSTER_WIDTH + 16,\n        decelerationRate: \"fast\"\n      })]\n    });\n  };\n  var renderFeaturedMovies = function renderFeaturedMovies() {\n    if (featuredMovies.length === 0) return null;\n    return _jsxs(View, {\n      style: styles.featuredSection,\n      children: [_jsxs(View, {\n        style: styles.featuredHeader,\n        children: [_jsx(Text, {\n          style: styles.featuredTitle,\n          children: \"Featured Movies\"\n        }), _jsx(Text, {\n          style: styles.featuredSubtitle,\n          children: \"Top 5 Highest-Rated Recent Films\"\n        })]\n      }), _jsx(FlatList, {\n        data: featuredMovies,\n        renderItem: renderMoviePoster,\n        keyExtractor: function keyExtractor(movie) {\n          return movie.id.toString();\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.moviesRow,\n        snapToInterval: POSTER_WIDTH + 16,\n        decelerationRate: \"fast\"\n      })]\n    });\n  };\n  var renderSearchResults = function renderSearchResults() {\n    if (searchResults.length === 0 && searchQuery.trim().length > 0) {\n      return _jsx(View, {\n        style: styles.noResults,\n        children: _jsxs(Text, {\n          style: styles.noResultsText,\n          children: [\"No movies found for \\\"\", searchQuery, \"\\\"\"]\n        })\n      });\n    }\n    return _jsxs(View, {\n      style: styles.searchResultsSection,\n      children: [_jsxs(View, {\n        style: styles.genreHeader,\n        children: [_jsx(Text, {\n          style: styles.genreTitle,\n          children: \"Search Results\"\n        }), _jsxs(Text, {\n          style: styles.movieCount,\n          children: [searchResults.length, \" movies\"]\n        })]\n      }), _jsx(FlatList, {\n        data: searchResults,\n        renderItem: renderMoviePoster,\n        keyExtractor: function keyExtractor(movie) {\n          return movie.id.toString();\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.moviesRow,\n        snapToInterval: POSTER_WIDTH + 16,\n        decelerationRate: \"fast\"\n      })]\n    });\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#007AFF\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading movies...\"\n      })]\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.imdbHeader,\n      children: [_jsx(Text, {\n        style: styles.imdbTitle,\n        children: \"IMBD\"\n      }), _jsxs(View, {\n        style: styles.searchContainer,\n        children: [_jsx(TextInput, {\n          style: styles.searchInput,\n          placeholder: \"Search movies...\",\n          placeholderTextColor: \"#999\",\n          value: searchQuery,\n          onChangeText: handleSearch,\n          autoCapitalize: \"none\",\n          autoCorrect: false\n        }), isSearching && _jsx(ActivityIndicator, {\n          size: \"small\",\n          color: \"#000\",\n          style: styles.searchSpinner\n        })]\n      })]\n    }), searchQuery.trim().length > 0 ? _jsx(FlatList, {\n      data: [1],\n      renderItem: function renderItem() {\n        return renderSearchResults();\n      },\n      keyExtractor: function keyExtractor() {\n        return 'search';\n      },\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: styles.genresList\n    }) : _jsx(FlatList, {\n      data: ['featured'].concat(_toConsumableArray(genres)),\n      renderItem: function renderItem(_ref6) {\n        var item = _ref6.item,\n          index = _ref6.index;\n        if (item === 'featured') {\n          return renderFeaturedMovies();\n        }\n        return renderGenreSection({\n          item: item\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return item === 'featured' ? 'featured' : item.id.toString();\n      },\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: styles.genresList,\n      onRefresh: loadGenresAndMovies,\n      refreshing: loading\n    }), _jsx(MovieModal, {\n      visible: modalVisible,\n      movie: selectedMovie,\n      onClose: function onClose() {\n        setModalVisible(false);\n        setSelectedMovie(null);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0a0a0a'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#0a0a0a'\n  },\n  loadingText: {\n    color: '#fff',\n    marginTop: 16,\n    fontSize: 16\n  },\n  imdbHeader: {\n    backgroundColor: '#F5C518',\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  },\n  imdbTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 16,\n    letterSpacing: 2\n  },\n  searchContainer: {\n    position: 'relative'\n  },\n  searchInput: {\n    backgroundColor: '#fff',\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    fontSize: 16,\n    color: '#000',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 2\n  },\n  searchSpinner: {\n    position: 'absolute',\n    right: 15,\n    top: 12\n  },\n  featuredSection: {\n    marginBottom: 30\n  },\n  featuredHeader: {\n    paddingHorizontal: 20,\n    marginBottom: 16,\n    alignItems: 'center'\n  },\n  featuredTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 4\n  },\n  featuredSubtitle: {\n    fontSize: 14,\n    color: '#888',\n    textAlign: 'center'\n  },\n  genresList: {\n    paddingBottom: 20\n  },\n  genreSection: {\n    marginBottom: 30\n  },\n  genreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 16\n  },\n  genreTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  movieCount: {\n    fontSize: 14,\n    color: '#888'\n  },\n  moviesRow: {\n    paddingHorizontal: 20\n  },\n  moviePoster: {\n    width: POSTER_WIDTH,\n    height: POSTER_HEIGHT,\n    marginRight: 16,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    position: 'relative'\n  },\n  posterImage: {\n    width: '100%',\n    height: '100%'\n  },\n  ratingBadge: {\n    position: 'absolute',\n    top: 8,\n    right: 8,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#FFD700'\n  },\n  ratingText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#FFD700'\n  },\n  posterOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.9)',\n    padding: 12\n  },\n  movieTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 6,\n    textAlign: 'center',\n    lineHeight: 16\n  },\n  movieMeta: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  movieYear: {\n    fontSize: 11,\n    color: '#ccc',\n    fontWeight: '500'\n  },\n  movieRating: {\n    fontSize: 11,\n    color: '#FFD700',\n    fontWeight: 'bold'\n  },\n  searchResultsSection: {\n    marginBottom: 30\n  },\n  noResults: {\n    padding: 40,\n    alignItems: 'center'\n  },\n  noResultsText: {\n    fontSize: 18,\n    color: '#888',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Image","ActivityIndicator","Dimensions","FlatList","TextInput","SafeAreaView","getGenres","getMoviesByGenre","searchMovies","getTopRatedMovies","socketService","MovieModal","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","POSTER_WIDTH","POSTER_HEIGHT","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","genres","setGenres","_useState3","_useState4","moviesByGenre","setMoviesByGenre","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedMovie","setSelectedMovie","_useState9","_useState0","modalVisible","setModalVisible","_useState1","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","searchResults","setSearchResults","_useState13","_useState14","isSearching","setIsSearching","_useState15","_useState16","featuredMovies","setFeaturedMovies","loadGenresAndMovies","setupSocketConnection","disconnect","connect","onMovieSelected","movie","console","log","_ref2","_asyncToGenerator","topMovies","recentTopMovies","filter","Date","release_date","sort","a","b","vote_average","slice","error","genresData","moviesData","genre","movies","id","name","apply","arguments","handleMoviePress","selectMovie","handleSearch","_ref3","query","trim","length","results","_x","renderMoviePoster","_ref4","item","style","styles","moviePoster","onPress","activeOpacity","children","source","uri","poster_path","posterImage","resizeMode","ratingBadge","ratingText","toFixed","posterOverlay","movieTitle","numberOfLines","title","movieMeta","movieYear","getFullYear","movieRating","renderGenreSection","_ref5","genreSection","genreHeader","genreTitle","movieCount","data","renderItem","keyExtractor","toString","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","moviesRow","snapToInterval","decelerationRate","renderFeaturedMovies","featuredSection","featuredHeader","featuredTitle","featuredSubtitle","renderSearchResults","noResults","noResultsText","searchResultsSection","loadingContainer","size","color","loadingText","container","imdbHeader","imdbTitle","searchContainer","searchInput","placeholder","placeholderTextColor","value","onChangeText","autoCapitalize","autoCorrect","searchSpinner","showsVerticalScrollIndicator","genresList","concat","_toConsumableArray","_ref6","index","onRefresh","refreshing","visible","onClose","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","paddingTop","paddingBottom","paddingHorizontal","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","fontWeight","textAlign","marginBottom","letterSpacing","position","borderRadius","paddingVertical","right","top","flexDirection","marginRight","overflow","borderWidth","borderColor","bottom","left","padding","lineHeight"],"sources":["/Users/francescaforzoni/Downloads/Dad_MagicApp_002/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Image,\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  TextInput,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { getGenres, getMoviesByGenre, searchMovies, getTopRatedMovies } from '../services/tmdbService';\nimport { socketService } from '../services/socketService';\nimport MovieModal from '../components/MovieModal';\n\nconst { width } = Dimensions.get('window');\nconst POSTER_WIDTH = 156; // 30% larger (120 * 1.3)\nconst POSTER_HEIGHT = 234; // 30% larger (180 * 1.3)\n\nexport default function HomeScreen({ navigation }) {\n  const [genres, setGenres] = useState([]);\n  const [moviesByGenre, setMoviesByGenre] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [featuredMovies, setFeaturedMovies] = useState([]);\n\n  useEffect(() => {\n    loadGenresAndMovies();\n    setupSocketConnection();\n    \n    return () => {\n      socketService.disconnect();\n    };\n  }, []);\n\n  const setupSocketConnection = () => {\n    socketService.connect();\n    socketService.onMovieSelected((movie) => {\n      console.log('Movie selected by customer:', movie);\n    });\n  };\n\n  const loadGenresAndMovies = async () => {\n    try {\n      setLoading(true);\n      \n      // Get top 5 highest-rated recent movies for featured section\n      try {\n        const topMovies = await getTopRatedMovies(1, 20); // Get more to filter by recent\n        const recentTopMovies = topMovies\n          .filter(movie => new Date(movie.release_date) >= new Date('2020-01-01')) // Recent movies (2020+)\n          .sort((a, b) => b.vote_average - a.vote_average) // Sort by rating\n          .slice(0, 5); // Take top 5\n        setFeaturedMovies(recentTopMovies);\n      } catch (error) {\n        console.error('Error loading featured movies:', error);\n        setFeaturedMovies([]);\n      }\n      \n      // Get all genres\n      const genresData = await getGenres();\n      setGenres(genresData);\n      \n      // Load top 50 movies for each genre\n      const moviesData = {};\n      for (const genre of genresData) {\n        try {\n          const movies = await getMoviesByGenre(genre.id, 1, 50); // Limit to 50 movies\n          moviesData[genre.id] = movies;\n        } catch (error) {\n          console.error(`Error loading movies for genre ${genre.name}:`, error);\n          moviesData[genre.id] = [];\n        }\n      }\n      \n      setMoviesByGenre(moviesData);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMoviePress = (movie) => {\n    setSelectedMovie(movie);\n    setModalVisible(true);\n    \n    // Send movie selection to magician app via socket\n    socketService.selectMovie(movie);\n  };\n\n  const handleSearch = async (query) => {\n    setSearchQuery(query);\n    \n    if (query.trim().length === 0) {\n      setSearchResults([]);\n      setIsSearching(false);\n      return;\n    }\n    \n    if (query.trim().length < 2) return; // Don't search for very short queries\n    \n    setIsSearching(true);\n    try {\n      const results = await searchMovies(query, 1);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const renderMoviePoster = ({ item }) => (\n    <TouchableOpacity\n      style={styles.moviePoster}\n      onPress={() => handleMoviePress(item)}\n      activeOpacity={0.7}\n    >\n      <Image\n        source={{\n          uri: `https://image.tmdb.org/t/p/w500${item.poster_path}`,\n        }}\n        style={styles.posterImage}\n        resizeMode=\"cover\"\n      />\n      \n      {/* Rating Badge */}\n      {item.vote_average && (\n        <View style={styles.ratingBadge}>\n          <Text style={styles.ratingText}>\n            ★ {item.vote_average.toFixed(1)}\n          </Text>\n        </View>\n      )}\n      \n      {/* Movie Info Overlay */}\n      <View style={styles.posterOverlay}>\n        <Text style={styles.movieTitle} numberOfLines={2}>\n          {item.title}\n        </Text>\n        <View style={styles.movieMeta}>\n          <Text style={styles.movieYear}>\n            {new Date(item.release_date).getFullYear()}\n          </Text>\n          {item.vote_average && (\n            <Text style={styles.movieRating}>\n              ★ {item.vote_average.toFixed(1)}\n            </Text>\n          )}\n        </View>\n      </View>\n    </TouchableOpacity>\n  );\n\n  const renderGenreSection = ({ item: genre }) => {\n    const movies = moviesByGenre[genre.id] || [];\n    \n    if (movies.length === 0) return null;\n\n    return (\n      <View style={styles.genreSection}>\n        <View style={styles.genreHeader}>\n          <Text style={styles.genreTitle}>{genre.name}</Text>\n          <Text style={styles.movieCount}>{movies.length} movies</Text>\n        </View>\n        \n        <FlatList\n          data={movies}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n  const renderFeaturedMovies = () => {\n    if (featuredMovies.length === 0) return null;\n\n    return (\n      <View style={styles.featuredSection}>\n        <View style={styles.featuredHeader}>\n          <Text style={styles.featuredTitle}>Featured Movies</Text>\n          <Text style={styles.featuredSubtitle}>Top 5 Highest-Rated Recent Films</Text>\n        </View>\n        \n        <FlatList\n          data={featuredMovies}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n  const renderSearchResults = () => {\n    if (searchResults.length === 0 && searchQuery.trim().length > 0) {\n      return (\n        <View style={styles.noResults}>\n          <Text style={styles.noResultsText}>No movies found for \"{searchQuery}\"</Text>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.searchResultsSection}>\n        <View style={styles.genreHeader}>\n          <Text style={styles.genreTitle}>Search Results</Text>\n          <Text style={styles.movieCount}>{searchResults.length} movies</Text>\n        </View>\n        \n        <FlatList\n          data={searchResults}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n        <Text style={styles.loadingText}>Loading movies...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* Yellow IMDB Header */}\n      <View style={styles.imdbHeader}>\n        <Text style={styles.imdbTitle}>IMBD</Text>\n        <View style={styles.searchContainer}>\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"Search movies...\"\n            placeholderTextColor=\"#999\"\n            value={searchQuery}\n            onChangeText={handleSearch}\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n          />\n          {isSearching && (\n            <ActivityIndicator size=\"small\" color=\"#000\" style={styles.searchSpinner} />\n          )}\n        </View>\n      </View>\n      \n      {/* Content - Show search results or genres */}\n      {searchQuery.trim().length > 0 ? (\n        <FlatList\n          data={[1]} // Single item to render search results\n          renderItem={() => renderSearchResults()}\n          keyExtractor={() => 'search'}\n          showsVerticalScrollIndicator={false}\n          contentContainerStyle={styles.genresList}\n        />\n      ) : (\n        <FlatList\n          data={['featured', ...genres]} // Add featured section at the top\n          renderItem={({ item, index }) => {\n            if (item === 'featured') {\n              return renderFeaturedMovies();\n            }\n            return renderGenreSection({ item });\n          }}\n          keyExtractor={(item, index) => item === 'featured' ? 'featured' : item.id.toString()}\n          showsVerticalScrollIndicator={false}\n          contentContainerStyle={styles.genresList}\n          onRefresh={loadGenresAndMovies}\n          refreshing={loading}\n        />\n      )}\n\n      <MovieModal\n        visible={modalVisible}\n        movie={selectedMovie}\n        onClose={() => {\n          setModalVisible(false);\n          setSelectedMovie(null);\n        }}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0a0a0a',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#0a0a0a',\n  },\n  loadingText: {\n    color: '#fff',\n    marginTop: 16,\n    fontSize: 16,\n  },\n  imdbHeader: {\n    backgroundColor: '#F5C518', // IMDB yellow\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  imdbTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 16,\n    letterSpacing: 2,\n  },\n  searchContainer: {\n    position: 'relative',\n  },\n  searchInput: {\n    backgroundColor: '#fff',\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    fontSize: 16,\n    color: '#000',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n  },\n  searchSpinner: {\n    position: 'absolute',\n    right: 15,\n    top: 12,\n  },\n  featuredSection: {\n    marginBottom: 30,\n  },\n  featuredHeader: {\n    paddingHorizontal: 20,\n    marginBottom: 16,\n    alignItems: 'center',\n  },\n  featuredTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 4,\n  },\n  featuredSubtitle: {\n    fontSize: 14,\n    color: '#888',\n    textAlign: 'center',\n  },\n  genresList: {\n    paddingBottom: 20,\n  },\n  genreSection: {\n    marginBottom: 30,\n  },\n  genreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 16,\n  },\n  genreTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  movieCount: {\n    fontSize: 14,\n    color: '#888',\n  },\n  moviesRow: {\n    paddingHorizontal: 20,\n  },\n  moviePoster: {\n    width: POSTER_WIDTH,\n    height: POSTER_HEIGHT,\n    marginRight: 16,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    position: 'relative',\n  },\n  posterImage: {\n    width: '100%',\n    height: '100%',\n  },\n  ratingBadge: {\n    position: 'absolute',\n    top: 8,\n    right: 8,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#FFD700',\n  },\n  ratingText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#FFD700',\n  },\n  posterOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.9)',\n    padding: 12,\n  },\n  movieTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 6,\n    textAlign: 'center',\n    lineHeight: 16,\n  },\n  movieMeta: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  movieYear: {\n    fontSize: 11,\n    color: '#ccc',\n    fontWeight: '500',\n  },\n  movieRating: {\n    fontSize: 11,\n    color: '#FFD700',\n    fontWeight: 'bold',\n  },\n  searchResultsSection: {\n    marginBottom: 30,\n  },\n  noResults: {\n    padding: 40,\n    alignItems: 'center',\n  },\n  noResultsText: {\n    fontSize: 18,\n    color: '#888',\n    textAlign: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}