{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { getGenres, getMoviesByGenre, searchMovies, getTopRatedMovies, getMovieDetails } from \"../services/tmdbService\";\nimport { socketService } from \"../services/socketService\";\nimport MovieModal from \"../components/MovieModal\";\nimport { getPriorityMoviesByGenre } from \"../data/priorityMovies\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar POSTER_WIDTH = 156;\nvar POSTER_HEIGHT = 234;\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    genres = _useState2[0],\n    setGenres = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    moviesByGenre = _useState4[0],\n    setMoviesByGenre = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedMovie = _useState8[0],\n    setSelectedMovie = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    modalVisible = _useState0[0],\n    setModalVisible = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    searchQuery = _useState10[0],\n    setSearchQuery = _useState10[1];\n  var _useState11 = useState([]),\n    _useState12 = _slicedToArray(_useState11, 2),\n    searchResults = _useState12[0],\n    setSearchResults = _useState12[1];\n  var _useState13 = useState(false),\n    _useState14 = _slicedToArray(_useState13, 2),\n    isSearching = _useState14[0],\n    setIsSearching = _useState14[1];\n  var _useState15 = useState([]),\n    _useState16 = _slicedToArray(_useState15, 2),\n    featuredMovies = _useState16[0],\n    setFeaturedMovies = _useState16[1];\n  useEffect(function () {\n    loadGenresAndMovies();\n    setupSocketConnection();\n    return function () {\n      socketService.disconnect();\n    };\n  }, []);\n  var setupSocketConnection = function setupSocketConnection() {\n    socketService.connect();\n    socketService.onMovieSelected(function (movie) {\n      console.log('Movie selected by customer:', movie);\n    });\n  };\n  var loadGenresAndMovies = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        try {\n          var topMovies = yield getTopRatedMovies(1, 20);\n          var recentTopMovies = topMovies.filter(function (movie) {\n            return new Date(movie.release_date) >= new Date('2020-01-01');\n          }).sort(function (a, b) {\n            return b.vote_average - a.vote_average;\n          }).slice(0, 5);\n          setFeaturedMovies(recentTopMovies);\n        } catch (error) {\n          console.error('Error loading featured movies:', error);\n          setFeaturedMovies([]);\n        }\n        var genresData = yield getGenres();\n        setGenres(genresData);\n        var moviesData = {};\n        var usedMovieIds = new Set();\n        var filteredGenres = genresData.filter(function (genre) {\n          return genre.name !== 'Documentary' && genre.name !== 'TV Movie';\n        });\n        var priorityGenres = ['Action', 'Comedy', 'Drama', 'Thriller', 'Horror', 'Romance', 'Adventure', 'Sci-Fi', 'Family & Animation', 'Fantasy', 'Musical', 'Crime'];\n        var sortedGenres = _toConsumableArray(filteredGenres).sort(function (a, b) {\n          var aPriority = priorityGenres.indexOf(a.name);\n          var bPriority = priorityGenres.indexOf(b.name);\n          if (aPriority === -1 && bPriority === -1) return 0;\n          if (aPriority === -1) return 1;\n          if (bPriority === -1) return -1;\n          return aPriority - bPriority;\n        });\n        var _loop = function* _loop(genre) {\n          try {\n            var allMovies = [];\n            if (genre.name === 'Family' || genre.name === 'Animation') {\n              var familyMovies = yield getMoviesByGenre(genre.id, 1, 50);\n              var animationGenre = genresData.find(function (g) {\n                return g.name === (genre.name === 'Family' ? 'Animation' : 'Family');\n              });\n              if (animationGenre) {\n                var animationMovies = yield getMoviesByGenre(animationGenre.id, 1, 50);\n                var combinedMovies = [].concat(_toConsumableArray(familyMovies), _toConsumableArray(animationMovies));\n                var uniqueMovies = combinedMovies.filter(function (movie, index, self) {\n                  return index === self.findIndex(function (m) {\n                    return m.id === movie.id;\n                  });\n                });\n                allMovies = uniqueMovies;\n              } else {\n                allMovies = familyMovies;\n              }\n            } else {\n              var priorityMoviesForGenre = getPriorityMoviesByGenre(genre.name);\n              allMovies = yield getMoviesByGenre(genre.id, 1, 100);\n              var finalGenreMovies = [];\n              var _loop2 = function* _loop2(priorityMovie) {\n                var foundMovie = allMovies.find(function (movie) {\n                  return movie.id === priorityMovie.tmdbId;\n                });\n                if (foundMovie) {\n                  finalGenreMovies.push(foundMovie);\n                  usedMovieIds.add(foundMovie.id);\n                }\n              };\n              for (var priorityMovie of priorityMoviesForGenre) {\n                yield* _loop2(priorityMovie);\n              }\n              var remainingSlots = 50 - finalGenreMovies.length;\n              var additionalMovies = allMovies.filter(function (movie) {\n                return !finalGenreMovies.some(function (pm) {\n                  return pm.id === movie.id;\n                });\n              }).slice(0, remainingSlots);\n              finalGenreMovies = [].concat(_toConsumableArray(finalGenreMovies), _toConsumableArray(additionalMovies));\n              finalGenreMovies.forEach(function (movie) {\n                return usedMovieIds.add(movie.id);\n              });\n              allMovies = finalGenreMovies;\n            }\n            var availableMovies = allMovies.filter(function (movie) {\n              return !usedMovieIds.has(movie.id);\n            });\n            var genreMovies = availableMovies.slice(0, 50);\n            genreMovies.forEach(function (movie) {\n              return usedMovieIds.add(movie.id);\n            });\n            var genreKey = genre.name === 'Family' || genre.name === 'Animation' ? 'Family & Animation' : genre.id;\n            moviesData[genreKey] = genreMovies;\n          } catch (error) {\n            console.error(`Error loading movies for genre ${genre.name}:`, error);\n            var _genreKey = genre.name === 'Family' || genre.name === 'Animation' ? 'Family & Animation' : genre.id;\n            moviesData[_genreKey] = [];\n          }\n        };\n        for (var genre of sortedGenres) {\n          yield* _loop(genre);\n        }\n        setMoviesByGenre(moviesData);\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadGenresAndMovies() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleMoviePress = function handleMoviePress(movie) {\n    setSelectedMovie(movie);\n    setModalVisible(true);\n    socketService.selectMovie(movie);\n  };\n  var handleSearch = function () {\n    var _ref3 = _asyncToGenerator(function* (query) {\n      setSearchQuery(query);\n      if (query.trim().length === 0) {\n        setSearchResults([]);\n        setIsSearching(false);\n        return;\n      }\n      if (query.trim().length < 2) {\n        setSearchResults([]);\n        return;\n      }\n      setIsSearching(true);\n      try {\n        var results = yield searchMovies(query, 1);\n        setSearchResults(results);\n      } catch (error) {\n        console.error('Error searching movies:', error);\n        setSearchResults([]);\n      } finally {\n        setIsSearching(false);\n      }\n    });\n    return function handleSearch(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  var renderMoviePoster = function renderMoviePoster(_ref4) {\n    var item = _ref4.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.moviePoster,\n      onPress: function onPress() {\n        return handleMoviePress(item);\n      },\n      activeOpacity: 0.7,\n      children: [_jsx(Image, {\n        source: {\n          uri: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n        },\n        style: styles.posterImage,\n        resizeMode: \"cover\"\n      }), item.vote_average && _jsx(View, {\n        style: styles.ratingBadge,\n        children: _jsxs(Text, {\n          style: styles.ratingText,\n          children: [\"\\u2605 \", item.vote_average.toFixed(1)]\n        })\n      }), _jsx(View, {\n        style: styles.posterOverlay,\n        children: _jsx(Text, {\n          style: styles.movieTitle,\n          numberOfLines: 2,\n          children: item.title\n        })\n      })]\n    });\n  };\n  var renderGenreSection = function renderGenreSection(_ref5) {\n    var genre = _ref5.item;\n    var genreKey = genre.name === 'Family' || genre.name === 'Animation' ? 'Family & Animation' : genre.id;\n    var movies = moviesByGenre[genreKey] || [];\n    if (movies.length === 0) return null;\n    return _jsxs(View, {\n      style: styles.genreSection,\n      children: [_jsxs(View, {\n        style: styles.genreHeader,\n        children: [_jsxs(View, {\n          style: styles.genreTitleRow,\n          children: [_jsx(Text, {\n            style: styles.genreTitle,\n            children: genre.name\n          }), getPriorityMoviesByGenre(genre.name).length > 0 && _jsx(View, {\n            style: styles.priorityBadge,\n            children: _jsxs(Text, {\n              style: styles.priorityBadgeText,\n              children: [getPriorityMoviesByGenre(genre.name).length, \" Priority\"]\n            })\n          })]\n        }), _jsxs(Text, {\n          style: styles.movieCount,\n          children: [movies.length, \" movies\"]\n        })]\n      }), _jsx(FlatList, {\n        data: movies,\n        renderItem: renderMoviePoster,\n        keyExtractor: function keyExtractor(movie) {\n          return movie.id.toString();\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.moviesRow,\n        snapToInterval: POSTER_WIDTH + 16,\n        decelerationRate: \"fast\"\n      })]\n    });\n  };\n  var renderFeaturedMovies = function renderFeaturedMovies() {\n    if (featuredMovies.length === 0) return null;\n    return _jsxs(View, {\n      style: styles.featuredSection,\n      children: [_jsxs(View, {\n        style: styles.featuredHeader,\n        children: [_jsx(Text, {\n          style: styles.featuredTitle,\n          children: \"Featured Movies\"\n        }), _jsx(Text, {\n          style: styles.featuredSubtitle,\n          children: \"Top 5 Highest-Rated Recent Films\"\n        })]\n      }), _jsx(FlatList, {\n        data: featuredMovies,\n        renderItem: renderMoviePoster,\n        keyExtractor: function keyExtractor(movie) {\n          return movie.id.toString();\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.moviesRow,\n        snapToInterval: POSTER_WIDTH + 16,\n        decelerationRate: \"fast\"\n      })]\n    });\n  };\n  var renderSearchResults = function renderSearchResults() {\n    if (searchResults.length === 0 && searchQuery.trim().length > 0) {\n      return _jsx(View, {\n        style: styles.noResults,\n        children: _jsxs(Text, {\n          style: styles.noResultsText,\n          children: [\"No movies found for \\\"\", searchQuery, \"\\\"\"]\n        })\n      });\n    }\n    return _jsxs(View, {\n      style: styles.searchResultsSection,\n      children: [_jsxs(View, {\n        style: styles.genreHeader,\n        children: [_jsx(Text, {\n          style: styles.genreTitle,\n          children: \"Search Results\"\n        }), _jsxs(Text, {\n          style: styles.movieCount,\n          children: [searchResults.length, \" movies\"]\n        })]\n      }), _jsx(FlatList, {\n        data: searchResults,\n        renderItem: renderMoviePoster,\n        keyExtractor: function keyExtractor(movie) {\n          return movie.id.toString();\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.moviesRow,\n        snapToInterval: POSTER_WIDTH + 16,\n        decelerationRate: \"fast\"\n      })]\n    });\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#007AFF\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading movies...\"\n      })]\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.imdbHeader,\n      children: [_jsx(Text, {\n        style: styles.imdbTitle,\n        children: \"IMBD\"\n      }), _jsxs(View, {\n        style: styles.searchContainer,\n        children: [_jsx(TextInput, {\n          style: styles.searchInput,\n          placeholder: \"Search movies...\",\n          placeholderTextColor: \"#999\",\n          value: searchQuery,\n          onChangeText: handleSearch,\n          autoCapitalize: \"none\",\n          autoCorrect: false\n        }), isSearching && _jsx(ActivityIndicator, {\n          size: \"small\",\n          color: \"#000\",\n          style: styles.searchSpinner\n        }), searchQuery.trim().length > 0 && searchResults.length > 0 && _jsx(View, {\n          style: styles.searchDropdown,\n          children: _jsx(FlatList, {\n            data: searchResults.slice(0, 8),\n            renderItem: function renderItem(_ref6) {\n              var item = _ref6.item;\n              return _jsxs(TouchableOpacity, {\n                style: styles.searchResultItem,\n                onPress: function onPress() {\n                  setSearchQuery('');\n                  setSearchResults([]);\n                  handleMoviePress(item);\n                },\n                children: [_jsx(Text, {\n                  style: styles.searchResultTitle,\n                  children: item.title\n                }), _jsx(Text, {\n                  style: styles.searchResultYear,\n                  children: new Date(item.release_date).getFullYear()\n                })]\n              });\n            },\n            keyExtractor: function keyExtractor(item) {\n              return item.id.toString();\n            },\n            showsVerticalScrollIndicator: false,\n            nestedScrollEnabled: true\n          })\n        })]\n      })]\n    }), searchQuery.trim().length > 0 ? _jsx(FlatList, {\n      data: [1],\n      renderItem: function renderItem() {\n        return renderSearchResults();\n      },\n      keyExtractor: function keyExtractor() {\n        return 'search';\n      },\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: styles.genresList\n    }) : _jsx(FlatList, {\n      data: ['featured'].concat(_toConsumableArray(genres)),\n      renderItem: function renderItem(_ref7) {\n        var item = _ref7.item,\n          index = _ref7.index;\n        if (item === 'featured') {\n          return renderFeaturedMovies();\n        }\n        return renderGenreSection({\n          item: item\n        });\n      },\n      keyExtractor: function keyExtractor(item, index) {\n        return item === 'featured' ? 'featured' : item.id.toString();\n      },\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: styles.genresList,\n      onRefresh: loadGenresAndMovies,\n      refreshing: loading\n    }), _jsx(MovieModal, {\n      visible: modalVisible,\n      movie: selectedMovie,\n      onClose: function onClose() {\n        setModalVisible(false);\n        setSelectedMovie(null);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0a0a0a'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#0a0a0a'\n  },\n  loadingText: {\n    color: '#fff',\n    marginTop: 16,\n    fontSize: 16\n  },\n  imdbHeader: {\n    backgroundColor: '#F5C518',\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  },\n  imdbTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 16,\n    letterSpacing: 2\n  },\n  searchContainer: {\n    position: 'relative'\n  },\n  searchInput: {\n    backgroundColor: '#fff',\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    fontSize: 16,\n    color: '#000',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 1\n    },\n    shadowOpacity: 0.2,\n    shadowRadius: 2\n  },\n  searchSpinner: {\n    position: 'absolute',\n    right: 15,\n    top: 12\n  },\n  searchDropdown: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    marginTop: 8,\n    elevation: 8,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 4\n    },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    maxHeight: 300,\n    zIndex: 1000\n  },\n  searchResultItem: {\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  searchResultTitle: {\n    fontSize: 16,\n    color: '#000',\n    fontWeight: '500',\n    flex: 1\n  },\n  searchResultYear: {\n    fontSize: 14,\n    color: '#666',\n    marginLeft: 12\n  },\n  featuredSection: {\n    marginBottom: 30\n  },\n  featuredHeader: {\n    paddingHorizontal: 20,\n    marginBottom: 16,\n    alignItems: 'center'\n  },\n  featuredTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 4\n  },\n  featuredSubtitle: {\n    fontSize: 14,\n    color: '#888',\n    textAlign: 'center'\n  },\n  genresList: {\n    paddingBottom: 20\n  },\n  genreSection: {\n    marginBottom: 30\n  },\n  genreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 16\n  },\n  genreTitleRow: {\n    flexDirection: 'row',\n    alignItems: 'center'\n  },\n  genreTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginRight: 12\n  },\n  priorityBadge: {\n    backgroundColor: '#FFD700',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12\n  },\n  priorityBadgeText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: '#000'\n  },\n  movieCount: {\n    fontSize: 14,\n    color: '#888'\n  },\n  moviesRow: {\n    paddingHorizontal: 20\n  },\n  moviePoster: {\n    width: POSTER_WIDTH,\n    height: POSTER_HEIGHT,\n    marginRight: 16,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    position: 'relative'\n  },\n  posterImage: {\n    width: '100%',\n    height: '100%'\n  },\n  ratingBadge: {\n    position: 'absolute',\n    top: 8,\n    right: 8,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#FFD700'\n  },\n  ratingText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#FFD700'\n  },\n  posterOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.9)',\n    padding: 12\n  },\n  movieTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 6,\n    textAlign: 'center',\n    lineHeight: 16\n  },\n  movieMeta: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center'\n  },\n  movieYear: {\n    fontSize: 11,\n    color: '#ccc',\n    fontWeight: '500'\n  },\n  movieRating: {\n    fontSize: 11,\n    color: '#FFD700',\n    fontWeight: 'bold'\n  },\n  searchResultsSection: {\n    marginBottom: 30\n  },\n  noResults: {\n    padding: 40,\n    alignItems: 'center'\n  },\n  noResultsText: {\n    fontSize: 18,\n    color: '#888',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Image","ActivityIndicator","Dimensions","FlatList","TextInput","SafeAreaView","getGenres","getMoviesByGenre","searchMovies","getTopRatedMovies","getMovieDetails","socketService","MovieModal","getPriorityMoviesByGenre","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","POSTER_WIDTH","POSTER_HEIGHT","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","genres","setGenres","_useState3","_useState4","moviesByGenre","setMoviesByGenre","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedMovie","setSelectedMovie","_useState9","_useState0","modalVisible","setModalVisible","_useState1","_useState10","searchQuery","setSearchQuery","_useState11","_useState12","searchResults","setSearchResults","_useState13","_useState14","isSearching","setIsSearching","_useState15","_useState16","featuredMovies","setFeaturedMovies","loadGenresAndMovies","setupSocketConnection","disconnect","connect","onMovieSelected","movie","console","log","_ref2","_asyncToGenerator","topMovies","recentTopMovies","filter","Date","release_date","sort","a","b","vote_average","slice","error","genresData","moviesData","usedMovieIds","Set","filteredGenres","genre","name","priorityGenres","sortedGenres","_toConsumableArray","aPriority","indexOf","bPriority","_loop","allMovies","familyMovies","id","animationGenre","find","g","animationMovies","combinedMovies","concat","uniqueMovies","index","self","findIndex","m","priorityMoviesForGenre","finalGenreMovies","_loop2","priorityMovie","foundMovie","tmdbId","push","add","remainingSlots","length","additionalMovies","some","pm","forEach","availableMovies","has","genreMovies","genreKey","apply","arguments","handleMoviePress","selectMovie","handleSearch","_ref3","query","trim","results","_x","renderMoviePoster","_ref4","item","style","styles","moviePoster","onPress","activeOpacity","children","source","uri","poster_path","posterImage","resizeMode","ratingBadge","ratingText","toFixed","posterOverlay","movieTitle","numberOfLines","title","renderGenreSection","_ref5","movies","genreSection","genreHeader","genreTitleRow","genreTitle","priorityBadge","priorityBadgeText","movieCount","data","renderItem","keyExtractor","toString","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","moviesRow","snapToInterval","decelerationRate","renderFeaturedMovies","featuredSection","featuredHeader","featuredTitle","featuredSubtitle","renderSearchResults","noResults","noResultsText","searchResultsSection","loadingContainer","size","color","loadingText","container","imdbHeader","imdbTitle","searchContainer","searchInput","placeholder","placeholderTextColor","value","onChangeText","autoCapitalize","autoCorrect","searchSpinner","searchDropdown","_ref6","searchResultItem","searchResultTitle","searchResultYear","getFullYear","showsVerticalScrollIndicator","nestedScrollEnabled","genresList","_ref7","onRefresh","refreshing","visible","onClose","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","paddingTop","paddingBottom","paddingHorizontal","elevation","shadowColor","shadowOffset","height","shadowOpacity","shadowRadius","fontWeight","textAlign","marginBottom","letterSpacing","position","borderRadius","paddingVertical","right","top","left","maxHeight","zIndex","borderBottomWidth","borderBottomColor","flexDirection","marginLeft","marginRight","overflow","borderWidth","borderColor","bottom","padding","lineHeight","movieMeta","movieYear","movieRating"],"sources":["/Users/francescaforzoni/Downloads/Dad_MagicApp_002/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Image,\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n  TextInput,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { getGenres, getMoviesByGenre, searchMovies, getTopRatedMovies, getMovieDetails } from '../services/tmdbService';\nimport { socketService } from '../services/socketService';\nimport MovieModal from '../components/MovieModal';\nimport { getPriorityMoviesByGenre } from '../data/priorityMovies';\n\nconst { width } = Dimensions.get('window');\nconst POSTER_WIDTH = 156; // 30% larger (120 * 1.3)\nconst POSTER_HEIGHT = 234; // 30% larger (180 * 1.3)\n\nexport default function HomeScreen({ navigation }) {\n  const [genres, setGenres] = useState([]);\n  const [moviesByGenre, setMoviesByGenre] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [isSearching, setIsSearching] = useState(false);\n  const [featuredMovies, setFeaturedMovies] = useState([]);\n\n  useEffect(() => {\n    loadGenresAndMovies();\n    setupSocketConnection();\n    \n    return () => {\n      socketService.disconnect();\n    };\n  }, []);\n\n  const setupSocketConnection = () => {\n    socketService.connect();\n    socketService.onMovieSelected((movie) => {\n      console.log('Movie selected by customer:', movie);\n    });\n  };\n\n  const loadGenresAndMovies = async () => {\n    try {\n      setLoading(true);\n      \n      // Get top 5 highest-rated recent movies for featured section\n      try {\n        const topMovies = await getTopRatedMovies(1, 20); // Get more to filter by recent\n        const recentTopMovies = topMovies\n          .filter(movie => new Date(movie.release_date) >= new Date('2020-01-01')) // Recent movies (2020+)\n          .sort((a, b) => b.vote_average - a.vote_average) // Sort by rating\n          .slice(0, 5); // Take top 5\n        setFeaturedMovies(recentTopMovies);\n      } catch (error) {\n        console.error('Error loading featured movies:', error);\n        setFeaturedMovies([]);\n      }\n      \n      // Get all genres\n      const genresData = await getGenres();\n      setGenres(genresData);\n      \n      // Load movies for each genre and ensure no duplicates\n      const moviesData = {};\n      const usedMovieIds = new Set(); // Track which movies have been assigned\n      \n      // Filter out unwanted genres and combine Family & Animation\n      const filteredGenres = genresData.filter(genre => \n        genre.name !== 'Documentary' && \n        genre.name !== 'TV Movie'\n      );\n      \n      // Sort genres by popularity/importance to prioritize them\n      const priorityGenres = ['Action', 'Comedy', 'Drama', 'Thriller', 'Horror', 'Romance', 'Adventure', 'Sci-Fi', 'Family & Animation', 'Fantasy', 'Musical', 'Crime'];\n      const sortedGenres = [...filteredGenres].sort((a, b) => {\n        const aPriority = priorityGenres.indexOf(a.name);\n        const bPriority = priorityGenres.indexOf(b.name);\n        if (aPriority === -1 && bPriority === -1) return 0;\n        if (aPriority === -1) return 1;\n        if (bPriority === -1) return -1;\n        return aPriority - bPriority;\n      });\n      \n      for (const genre of sortedGenres) {\n        try {\n          let allMovies = [];\n          \n          // Special handling for Family & Animation combination\n          if (genre.name === 'Family' || genre.name === 'Animation') {\n            // Get movies from both Family and Animation genres\n            const familyMovies = await getMoviesByGenre(genre.id, 1, 50);\n            const animationGenre = genresData.find(g => g.name === (genre.name === 'Family' ? 'Animation' : 'Family'));\n            if (animationGenre) {\n              const animationMovies = await getMoviesByGenre(animationGenre.id, 1, 50);\n              // Combine and remove duplicates\n              const combinedMovies = [...familyMovies, ...animationMovies];\n              const uniqueMovies = combinedMovies.filter((movie, index, self) => \n                index === self.findIndex(m => m.id === movie.id)\n              );\n              allMovies = uniqueMovies;\n            } else {\n              allMovies = familyMovies;\n            }\n          } else {\n            // Get priority movies for this genre first\n            const priorityMoviesForGenre = getPriorityMoviesByGenre(genre.name);\n            \n            // Get regular movies for this genre\n            allMovies = await getMoviesByGenre(genre.id, 1, 100);\n            \n            // Create final genre list: priority movies first, then regular movies\n            let finalGenreMovies = [];\n            \n            // Add priority movies first (if they exist in the regular results)\n            for (const priorityMovie of priorityMoviesForGenre) {\n              const foundMovie = allMovies.find(movie => movie.id === priorityMovie.tmdbId);\n              if (foundMovie) {\n                finalGenreMovies.push(foundMovie);\n                usedMovieIds.add(foundMovie.id);\n              }\n            }\n            \n            // Add remaining available movies (up to 50 total)\n            const remainingSlots = 50 - finalGenreMovies.length;\n            const additionalMovies = allMovies\n              .filter(movie => !finalGenreMovies.some(pm => pm.id === movie.id))\n              .slice(0, remainingSlots);\n            \n            finalGenreMovies = [...finalGenreMovies, ...additionalMovies];\n            \n            // Mark additional movies as used\n            finalGenreMovies.forEach(movie => usedMovieIds.add(movie.id));\n            \n            allMovies = finalGenreMovies;\n          }\n          \n          // Filter out movies that have already been assigned to other genres\n          const availableMovies = allMovies.filter(movie => !usedMovieIds.has(movie.id));\n          \n          // Take up to 50 movies for this genre\n          const genreMovies = availableMovies.slice(0, 50);\n          \n          // Mark these movies as used\n          genreMovies.forEach(movie => usedMovieIds.add(movie.id));\n          \n          // Use a combined name for Family/Animation genres\n          const genreKey = (genre.name === 'Family' || genre.name === 'Animation') ? 'Family & Animation' : genre.id;\n          moviesData[genreKey] = genreMovies;\n        } catch (error) {\n          console.error(`Error loading movies for genre ${genre.name}:`, error);\n          const genreKey = (genre.name === 'Family' || genre.name === 'Animation') ? 'Family & Animation' : genre.id;\n          moviesData[genreKey] = [];\n        }\n      }\n      \n      setMoviesByGenre(moviesData);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMoviePress = (movie) => {\n    setSelectedMovie(movie);\n    setModalVisible(true);\n    \n    // Send movie selection to magician app via socket\n    socketService.selectMovie(movie);\n  };\n\n  const handleSearch = async (query) => {\n    setSearchQuery(query);\n    \n    if (query.trim().length === 0) {\n      setSearchResults([]);\n      setIsSearching(false);\n      return;\n    }\n    \n    if (query.trim().length < 2) {\n      setSearchResults([]);\n      return;\n    }\n    \n    setIsSearching(true);\n    try {\n      const results = await searchMovies(query, 1);\n      setSearchResults(results);\n    } catch (error) {\n      console.error('Error searching movies:', error);\n      setSearchResults([]);\n    } finally {\n      setIsSearching(false);\n    }\n  };\n\n  const renderMoviePoster = ({ item }) => (\n    <TouchableOpacity\n      style={styles.moviePoster}\n      onPress={() => handleMoviePress(item)}\n      activeOpacity={0.7}\n    >\n      <Image\n        source={{\n          uri: `https://image.tmdb.org/t/p/w500${item.poster_path}`,\n        }}\n        style={styles.posterImage}\n        resizeMode=\"cover\"\n      />\n      \n      {/* Rating Badge */}\n      {item.vote_average && (\n        <View style={styles.ratingBadge}>\n          <Text style={styles.ratingText}>\n            ★ {item.vote_average.toFixed(1)}\n          </Text>\n        </View>\n      )}\n      \n      {/* Movie Info Overlay */}\n      <View style={styles.posterOverlay}>\n        <Text style={styles.movieTitle} numberOfLines={2}>\n          {item.title}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n\n  const renderGenreSection = ({ item: genre }) => {\n    // Handle combined Family & Animation genre\n    const genreKey = (genre.name === 'Family' || genre.name === 'Animation') ? 'Family & Animation' : genre.id;\n    const movies = moviesByGenre[genreKey] || [];\n    \n    if (movies.length === 0) return null;\n\n    return (\n      <View style={styles.genreSection}>\n        <View style={styles.genreHeader}>\n          <View style={styles.genreTitleRow}>\n            <Text style={styles.genreTitle}>{genre.name}</Text>\n            {getPriorityMoviesByGenre(genre.name).length > 0 && (\n              <View style={styles.priorityBadge}>\n                <Text style={styles.priorityBadgeText}>\n                  {getPriorityMoviesByGenre(genre.name).length} Priority\n                </Text>\n              </View>\n            )}\n          </View>\n          <Text style={styles.movieCount}>{movies.length} movies</Text>\n        </View>\n        \n        <FlatList\n          data={movies}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n  const renderFeaturedMovies = () => {\n    if (featuredMovies.length === 0) return null;\n\n    return (\n      <View style={styles.featuredSection}>\n        <View style={styles.featuredHeader}>\n          <Text style={styles.featuredTitle}>Featured Movies</Text>\n          <Text style={styles.featuredSubtitle}>Top 5 Highest-Rated Recent Films</Text>\n        </View>\n        \n        <FlatList\n          data={featuredMovies}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n  const renderSearchResults = () => {\n    if (searchResults.length === 0 && searchQuery.trim().length > 0) {\n      return (\n        <View style={styles.noResults}>\n          <Text style={styles.noResultsText}>No movies found for \"{searchQuery}\"</Text>\n        </View>\n      );\n    }\n\n    return (\n      <View style={styles.searchResultsSection}>\n        <View style={styles.genreHeader}>\n          <Text style={styles.genreTitle}>Search Results</Text>\n          <Text style={styles.movieCount}>{searchResults.length} movies</Text>\n        </View>\n        \n        <FlatList\n          data={searchResults}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n        <Text style={styles.loadingText}>Loading movies...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      {/* Yellow IMDB Header */}\n      <View style={styles.imdbHeader}>\n        <Text style={styles.imdbTitle}>IMBD</Text>\n        <View style={styles.searchContainer}>\n          <TextInput\n            style={styles.searchInput}\n            placeholder=\"Search movies...\"\n            placeholderTextColor=\"#999\"\n            value={searchQuery}\n            onChangeText={handleSearch}\n            autoCapitalize=\"none\"\n            autoCorrect={false}\n          />\n          {isSearching && (\n            <ActivityIndicator size=\"small\" color=\"#000\" style={styles.searchSpinner} />\n          )}\n          \n          {/* Search Results Dropdown */}\n          {searchQuery.trim().length > 0 && searchResults.length > 0 && (\n            <View style={styles.searchDropdown}>\n              <FlatList\n                data={searchResults.slice(0, 8)} // Show max 8 results\n                renderItem={({ item }) => (\n                  <TouchableOpacity\n                    style={styles.searchResultItem}\n                    onPress={() => {\n                      setSearchQuery('');\n                      setSearchResults([]);\n                      handleMoviePress(item);\n                    }}\n                  >\n                    <Text style={styles.searchResultTitle}>{item.title}</Text>\n                    <Text style={styles.searchResultYear}>\n                      {new Date(item.release_date).getFullYear()}\n                    </Text>\n                  </TouchableOpacity>\n                )}\n                keyExtractor={(item) => item.id.toString()}\n                showsVerticalScrollIndicator={false}\n                nestedScrollEnabled={true}\n              />\n            </View>\n          )}\n        </View>\n      </View>\n      \n      {/* Content - Show search results or genres */}\n      {searchQuery.trim().length > 0 ? (\n        <FlatList\n          data={[1]} // Single item to render search results\n          renderItem={() => renderSearchResults()}\n          keyExtractor={() => 'search'}\n          showsVerticalScrollIndicator={false}\n          contentContainerStyle={styles.genresList}\n        />\n      ) : (\n        <FlatList\n          data={['featured', ...genres]} // Add featured section at the top\n          renderItem={({ item, index }) => {\n            if (item === 'featured') {\n              return renderFeaturedMovies();\n            }\n            return renderGenreSection({ item });\n          }}\n          keyExtractor={(item, index) => item === 'featured' ? 'featured' : item.id.toString()}\n          showsVerticalScrollIndicator={false}\n          contentContainerStyle={styles.genresList}\n          onRefresh={loadGenresAndMovies}\n          refreshing={loading}\n        />\n      )}\n\n      <MovieModal\n        visible={modalVisible}\n        movie={selectedMovie}\n        onClose={() => {\n          setModalVisible(false);\n          setSelectedMovie(null);\n        }}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0a0a0a',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#0a0a0a',\n  },\n  loadingText: {\n    color: '#fff',\n    marginTop: 16,\n    fontSize: 16,\n  },\n  imdbHeader: {\n    backgroundColor: '#F5C518', // IMDB yellow\n    paddingTop: 20,\n    paddingBottom: 20,\n    paddingHorizontal: 20,\n    elevation: 4,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  imdbTitle: {\n    fontSize: 32,\n    fontWeight: 'bold',\n    color: '#000',\n    textAlign: 'center',\n    marginBottom: 16,\n    letterSpacing: 2,\n  },\n  searchContainer: {\n    position: 'relative',\n  },\n  searchInput: {\n    backgroundColor: '#fff',\n    borderRadius: 25,\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    fontSize: 16,\n    color: '#000',\n    elevation: 2,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.2,\n    shadowRadius: 2,\n  },\n  searchSpinner: {\n    position: 'absolute',\n    right: 15,\n    top: 12,\n  },\n  searchDropdown: {\n    position: 'absolute',\n    top: '100%',\n    left: 0,\n    right: 0,\n    backgroundColor: '#fff',\n    borderRadius: 12,\n    marginTop: 8,\n    elevation: 8,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.3,\n    shadowRadius: 8,\n    maxHeight: 300,\n    zIndex: 1000,\n  },\n  searchResultItem: {\n    paddingHorizontal: 20,\n    paddingVertical: 12,\n    borderBottomWidth: 1,\n    borderBottomColor: '#f0f0f0',\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  searchResultTitle: {\n    fontSize: 16,\n    color: '#000',\n    fontWeight: '500',\n    flex: 1,\n  },\n  searchResultYear: {\n    fontSize: 14,\n    color: '#666',\n    marginLeft: 12,\n  },\n  featuredSection: {\n    marginBottom: 30,\n  },\n  featuredHeader: {\n    paddingHorizontal: 20,\n    marginBottom: 16,\n    alignItems: 'center',\n  },\n  featuredTitle: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 4,\n  },\n  featuredSubtitle: {\n    fontSize: 14,\n    color: '#888',\n    textAlign: 'center',\n  },\n  genresList: {\n    paddingBottom: 20,\n  },\n  genreSection: {\n    marginBottom: 30,\n  },\n  genreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 16,\n  },\n  genreTitleRow: {\n    flexDirection: 'row',\n    alignItems: 'center',\n  },\n  genreTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginRight: 12,\n  },\n  priorityBadge: {\n    backgroundColor: '#FFD700',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n  },\n  priorityBadgeText: {\n    fontSize: 10,\n    fontWeight: 'bold',\n    color: '#000',\n  },\n  movieCount: {\n    fontSize: 14,\n    color: '#888',\n  },\n  moviesRow: {\n    paddingHorizontal: 20,\n  },\n  moviePoster: {\n    width: POSTER_WIDTH,\n    height: POSTER_HEIGHT,\n    marginRight: 16,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    position: 'relative',\n  },\n  posterImage: {\n    width: '100%',\n    height: '100%',\n  },\n  ratingBadge: {\n    position: 'absolute',\n    top: 8,\n    right: 8,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 12,\n    borderWidth: 1,\n    borderColor: '#FFD700',\n  },\n  ratingText: {\n    fontSize: 12,\n    fontWeight: 'bold',\n    color: '#FFD700',\n  },\n  posterOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.9)',\n    padding: 12,\n  },\n  movieTitle: {\n    fontSize: 14,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 6,\n    textAlign: 'center',\n    lineHeight: 16,\n  },\n  movieMeta: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n  },\n  movieYear: {\n    fontSize: 11,\n    color: '#ccc',\n    fontWeight: '500',\n  },\n  movieRating: {\n    fontSize: 11,\n    color: '#FFD700',\n    fontWeight: 'bold',\n  },\n  searchResultsSection: {\n    marginBottom: 30,\n  },\n  noResults: {\n    padding: 40,\n    alignItems: 'center',\n  },\n  noResultsText: {\n    fontSize: 18,\n    color: '#888',\n    textAlign: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}