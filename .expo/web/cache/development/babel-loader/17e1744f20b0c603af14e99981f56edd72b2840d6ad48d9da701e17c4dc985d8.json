{"ast":null,"code":"import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport HomeScreen from \"./src/screens/HomeScreen\";\nimport GenreScreen from \"./src/screens/GenreScreen\";\nimport MovieDetailScreen from \"./src/screens/MovieDetailScreen\";\nimport MagicianScreen from \"./src/screens/MagicianScreen\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createStackNavigator();\nexport default function App() {\n  useEffect(function () {\n    if (Platform.OS === 'web') {\n      var path = window.location.pathname;\n      if (path === '/Magician') {\n        console.log('Direct navigation to Magician screen');\n      }\n    }\n  }, []);\n  return _jsx(SafeAreaProvider, {\n    children: _jsxs(NavigationContainer, {\n      children: [_jsxs(Stack.Navigator, {\n        initialRouteName: \"Home\",\n        screenOptions: {\n          headerShown: false\n        },\n        children: [_jsx(Stack.Screen, {\n          name: \"Home\",\n          component: HomeScreen,\n          options: {\n            title: 'IMBD'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Genre\",\n          component: GenreScreen,\n          options: function options(_ref) {\n            var route = _ref.route;\n            return {\n              title: route.params.genreName\n            };\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"MovieDetail\",\n          component: MovieDetailScreen,\n          options: {\n            title: 'Movie Details'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Magician\",\n          component: MagicianScreen,\n          options: {\n            title: 'Magician View'\n          }\n        })]\n      }), _jsx(StatusBar, {\n        style: \"light\"\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useEffect","NavigationContainer","createStackNavigator","StatusBar","SafeAreaProvider","Platform","HomeScreen","GenreScreen","MovieDetailScreen","MagicianScreen","jsx","_jsx","jsxs","_jsxs","Stack","App","OS","path","window","location","pathname","console","log","children","Navigator","initialRouteName","screenOptions","headerShown","Screen","name","component","options","title","_ref","route","params","genreName","style"],"sources":["/Users/francescaforzoni/Downloads/Dad_MagicApp_002/App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { StatusBar } from 'expo-status-bar';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { Platform } from 'react-native';\n\nimport HomeScreen from './src/screens/HomeScreen';\nimport GenreScreen from './src/screens/GenreScreen';\nimport MovieDetailScreen from './src/screens/MovieDetailScreen';\nimport MagicianScreen from './src/screens/MagicianScreen';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  useEffect(() => {\n    // Handle direct URL routing for web\n    if (Platform.OS === 'web') {\n      const path = window.location.pathname;\n      if (path === '/Magician') {\n        // Force navigation to Magician screen\n        console.log('Direct navigation to Magician screen');\n      }\n    }\n  }, []);\n\n  return (\n    <SafeAreaProvider>\n      <NavigationContainer>\n        <Stack.Navigator \n          initialRouteName=\"Home\"\n          screenOptions={{\n            headerShown: false,\n          }}\n        >\n          <Stack.Screen \n            name=\"Home\" \n            component={HomeScreen} \n            options={{ title: 'IMBD' }}\n          />\n          <Stack.Screen \n            name=\"Genre\" \n            component={GenreScreen} \n            options={({ route }) => ({ title: route.params.genreName })}\n          />\n          <Stack.Screen \n            name=\"MovieDetail\" \n            component={MovieDetailScreen} \n            options={{ title: 'Movie Details' }}\n          />\n          <Stack.Screen \n            name=\"Magician\" \n            component={MagicianScreen} \n            options={{ title: 'Magician View' }}\n          />\n        </Stack.Navigator>\n        <StatusBar style=\"light\" />\n      </NavigationContainer>\n    </SafeAreaProvider>\n  );\n}\n"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,mBAAmB,QAAQ,0BAA0B;AAC9D,SAASC,oBAAoB,QAAQ,yBAAyB;AAC9D,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,gBAAgB,QAAQ,gCAAgC;AAAC,OAAAC,QAAA;AAGlE,OAAOC,UAAU;AACjB,OAAOC,WAAW;AAClB,OAAOC,iBAAiB;AACxB,OAAOC,cAAc;AAAqC,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAE1D,IAAMC,KAAK,GAAGZ,oBAAoB,CAAC,CAAC;AAEpC,eAAe,SAASa,GAAGA,CAAA,EAAG;EAC5Bf,SAAS,CAAC,YAAM;IAEd,IAAIK,QAAQ,CAACW,EAAE,KAAK,KAAK,EAAE;MACzB,IAAMC,IAAI,GAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ;MACrC,IAAIH,IAAI,KAAK,WAAW,EAAE;QAExBI,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;MACrD;IACF;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,OACEX,IAAA,CAACP,gBAAgB;IAAAmB,QAAA,EACfV,KAAA,CAACZ,mBAAmB;MAAAsB,QAAA,GAClBV,KAAA,CAACC,KAAK,CAACU,SAAS;QACdC,gBAAgB,EAAC,MAAM;QACvBC,aAAa,EAAE;UACbC,WAAW,EAAE;QACf,CAAE;QAAAJ,QAAA,GAEFZ,IAAA,CAACG,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,MAAM;UACXC,SAAS,EAAExB,UAAW;UACtByB,OAAO,EAAE;YAAEC,KAAK,EAAE;UAAO;QAAE,CAC5B,CAAC,EACFrB,IAAA,CAACG,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,OAAO;UACZC,SAAS,EAAEvB,WAAY;UACvBwB,OAAO,EAAE,SAATA,OAAOA,CAAAE,IAAA;YAAA,IAAKC,KAAK,GAAAD,IAAA,CAALC,KAAK;YAAA,OAAQ;cAAEF,KAAK,EAAEE,KAAK,CAACC,MAAM,CAACC;YAAU,CAAC;UAAA;QAAE,CAC7D,CAAC,EACFzB,IAAA,CAACG,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,aAAa;UAClBC,SAAS,EAAEtB,iBAAkB;UAC7BuB,OAAO,EAAE;YAAEC,KAAK,EAAE;UAAgB;QAAE,CACrC,CAAC,EACFrB,IAAA,CAACG,KAAK,CAACc,MAAM;UACXC,IAAI,EAAC,UAAU;UACfC,SAAS,EAAErB,cAAe;UAC1BsB,OAAO,EAAE;YAAEC,KAAK,EAAE;UAAgB;QAAE,CACrC,CAAC;MAAA,CACa,CAAC,EAClBrB,IAAA,CAACR,SAAS;QAACkC,KAAK,EAAC;MAAO,CAAE,CAAC;IAAA,CACR;EAAC,CACN,CAAC;AAEvB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}