{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { getGenres, getMoviesByGenre } from \"../services/tmdbService\";\nimport { socketService } from \"../services/socketService\";\nimport MovieModal from \"../components/MovieModal\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar _Dimensions$get = Dimensions.get('window'),\n  width = _Dimensions$get.width;\nvar POSTER_WIDTH = 120;\nvar POSTER_HEIGHT = 180;\nexport default function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    genres = _useState2[0],\n    setGenres = _useState2[1];\n  var _useState3 = useState({}),\n    _useState4 = _slicedToArray(_useState3, 2),\n    moviesByGenre = _useState4[0],\n    setMoviesByGenre = _useState4[1];\n  var _useState5 = useState(true),\n    _useState6 = _slicedToArray(_useState5, 2),\n    loading = _useState6[0],\n    setLoading = _useState6[1];\n  var _useState7 = useState(null),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedMovie = _useState8[0],\n    setSelectedMovie = _useState8[1];\n  var _useState9 = useState(false),\n    _useState0 = _slicedToArray(_useState9, 2),\n    modalVisible = _useState0[0],\n    setModalVisible = _useState0[1];\n  useEffect(function () {\n    loadGenresAndMovies();\n    setupSocketConnection();\n    return function () {\n      socketService.disconnect();\n    };\n  }, []);\n  var setupSocketConnection = function setupSocketConnection() {\n    socketService.connect();\n    socketService.onMovieSelected(function (movie) {\n      console.log('Movie selected by customer:', movie);\n    });\n  };\n  var loadGenresAndMovies = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        setLoading(true);\n        var genresData = yield getGenres();\n        setGenres(genresData);\n        var moviesData = {};\n        for (var genre of genresData) {\n          try {\n            var movies = yield getMoviesByGenre(genre.id, 1, 50);\n            moviesData[genre.id] = movies;\n          } catch (error) {\n            console.error(`Error loading movies for genre ${genre.name}:`, error);\n            moviesData[genre.id] = [];\n          }\n        }\n        setMoviesByGenre(moviesData);\n      } catch (error) {\n        console.error('Error loading data:', error);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function loadGenresAndMovies() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleMoviePress = function handleMoviePress(movie) {\n    setSelectedMovie(movie);\n    setModalVisible(true);\n    socketService.selectMovie(movie);\n  };\n  var renderMoviePoster = function renderMoviePoster(_ref3) {\n    var item = _ref3.item;\n    return _jsxs(TouchableOpacity, {\n      style: styles.moviePoster,\n      onPress: function onPress() {\n        return handleMoviePress(item);\n      },\n      activeOpacity: 0.7,\n      children: [_jsx(Image, {\n        source: {\n          uri: `https://image.tmdb.org/t/p/w500${item.poster_path}`\n        },\n        style: styles.posterImage,\n        resizeMode: \"cover\"\n      }), _jsxs(View, {\n        style: styles.posterOverlay,\n        children: [_jsx(Text, {\n          style: styles.movieTitle,\n          numberOfLines: 2,\n          children: item.title\n        }), _jsx(Text, {\n          style: styles.movieYear,\n          children: new Date(item.release_date).getFullYear()\n        })]\n      })]\n    });\n  };\n  var renderGenreSection = function renderGenreSection(_ref4) {\n    var genre = _ref4.item;\n    var movies = moviesByGenre[genre.id] || [];\n    if (movies.length === 0) return null;\n    return _jsxs(View, {\n      style: styles.genreSection,\n      children: [_jsxs(View, {\n        style: styles.genreHeader,\n        children: [_jsx(Text, {\n          style: styles.genreTitle,\n          children: genre.name\n        }), _jsxs(Text, {\n          style: styles.movieCount,\n          children: [movies.length, \" movies\"]\n        })]\n      }), _jsx(FlatList, {\n        data: movies,\n        renderItem: renderMoviePoster,\n        keyExtractor: function keyExtractor(movie) {\n          return movie.id.toString();\n        },\n        horizontal: true,\n        showsHorizontalScrollIndicator: false,\n        contentContainerStyle: styles.moviesRow,\n        snapToInterval: POSTER_WIDTH + 16,\n        decelerationRate: \"fast\"\n      })]\n    });\n  };\n  if (loading) {\n    return _jsxs(View, {\n      style: styles.loadingContainer,\n      children: [_jsx(ActivityIndicator, {\n        size: \"large\",\n        color: \"#007AFF\"\n      }), _jsx(Text, {\n        style: styles.loadingText,\n        children: \"Loading movies...\"\n      })]\n    });\n  }\n  return _jsxs(SafeAreaView, {\n    style: styles.container,\n    children: [_jsxs(View, {\n      style: styles.header,\n      children: [_jsx(Text, {\n        style: styles.title,\n        children: \"Movie Genres\"\n      }), _jsx(Text, {\n        style: styles.subtitle,\n        children: \"Swipe through movies by genre\"\n      })]\n    }), _jsx(FlatList, {\n      data: genres,\n      renderItem: renderGenreSection,\n      keyExtractor: function keyExtractor(item) {\n        return item.id.toString();\n      },\n      showsVerticalScrollIndicator: false,\n      contentContainerStyle: styles.genresList,\n      onRefresh: loadGenresAndMovies,\n      refreshing: loading\n    }), _jsx(MovieModal, {\n      visible: modalVisible,\n      movie: selectedMovie,\n      onClose: function onClose() {\n        setModalVisible(false);\n        setSelectedMovie(null);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0a0a0a'\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#0a0a0a'\n  },\n  loadingText: {\n    color: '#fff',\n    marginTop: 16,\n    fontSize: 16\n  },\n  header: {\n    padding: 20,\n    alignItems: 'center'\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 8\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#888',\n    textAlign: 'center'\n  },\n  genresList: {\n    paddingBottom: 20\n  },\n  genreSection: {\n    marginBottom: 30\n  },\n  genreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 16\n  },\n  genreTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff'\n  },\n  movieCount: {\n    fontSize: 14,\n    color: '#888'\n  },\n  moviesRow: {\n    paddingHorizontal: 20\n  },\n  moviePoster: {\n    width: POSTER_WIDTH,\n    height: POSTER_HEIGHT,\n    marginRight: 16,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 2\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84\n  },\n  posterImage: {\n    width: '100%',\n    height: '100%'\n  },\n  posterOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    padding: 12\n  },\n  movieTitle: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: '#fff',\n    marginBottom: 4,\n    textAlign: 'center'\n  },\n  movieYear: {\n    fontSize: 10,\n    color: '#888',\n    textAlign: 'center'\n  }\n});","map":{"version":3,"names":["React","useState","useEffect","View","Text","StyleSheet","ScrollView","TouchableOpacity","Image","ActivityIndicator","Dimensions","FlatList","SafeAreaView","getGenres","getMoviesByGenre","socketService","MovieModal","jsx","_jsx","jsxs","_jsxs","_Dimensions$get","get","width","POSTER_WIDTH","POSTER_HEIGHT","HomeScreen","_ref","navigation","_useState","_useState2","_slicedToArray","genres","setGenres","_useState3","_useState4","moviesByGenre","setMoviesByGenre","_useState5","_useState6","loading","setLoading","_useState7","_useState8","selectedMovie","setSelectedMovie","_useState9","_useState0","modalVisible","setModalVisible","loadGenresAndMovies","setupSocketConnection","disconnect","connect","onMovieSelected","movie","console","log","_ref2","_asyncToGenerator","genresData","moviesData","genre","movies","id","error","name","apply","arguments","handleMoviePress","selectMovie","renderMoviePoster","_ref3","item","style","styles","moviePoster","onPress","activeOpacity","children","source","uri","poster_path","posterImage","resizeMode","posterOverlay","movieTitle","numberOfLines","title","movieYear","Date","release_date","getFullYear","renderGenreSection","_ref4","length","genreSection","genreHeader","genreTitle","movieCount","data","renderItem","keyExtractor","toString","horizontal","showsHorizontalScrollIndicator","contentContainerStyle","moviesRow","snapToInterval","decelerationRate","loadingContainer","size","color","loadingText","container","header","subtitle","showsVerticalScrollIndicator","genresList","onRefresh","refreshing","visible","onClose","create","flex","backgroundColor","justifyContent","alignItems","marginTop","fontSize","padding","fontWeight","marginBottom","textAlign","paddingBottom","flexDirection","paddingHorizontal","height","marginRight","borderRadius","overflow","elevation","shadowColor","shadowOffset","shadowOpacity","shadowRadius","position","bottom","left","right"],"sources":["/Users/francescaforzoni/Downloads/Dad_MagicApp_002/src/screens/HomeScreen.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ScrollView,\n  TouchableOpacity,\n  Image,\n  ActivityIndicator,\n  Dimensions,\n  FlatList,\n} from 'react-native';\nimport { SafeAreaView } from 'react-native-safe-area-context';\nimport { getGenres, getMoviesByGenre } from '../services/tmdbService';\nimport { socketService } from '../services/socketService';\nimport MovieModal from '../components/MovieModal';\n\nconst { width } = Dimensions.get('window');\nconst POSTER_WIDTH = 120;\nconst POSTER_HEIGHT = 180;\n\nexport default function HomeScreen({ navigation }) {\n  const [genres, setGenres] = useState([]);\n  const [moviesByGenre, setMoviesByGenre] = useState({});\n  const [loading, setLoading] = useState(true);\n  const [selectedMovie, setSelectedMovie] = useState(null);\n  const [modalVisible, setModalVisible] = useState(false);\n\n  useEffect(() => {\n    loadGenresAndMovies();\n    setupSocketConnection();\n    \n    return () => {\n      socketService.disconnect();\n    };\n  }, []);\n\n  const setupSocketConnection = () => {\n    socketService.connect();\n    socketService.onMovieSelected((movie) => {\n      console.log('Movie selected by customer:', movie);\n    });\n  };\n\n  const loadGenresAndMovies = async () => {\n    try {\n      setLoading(true);\n      \n      // Get all genres\n      const genresData = await getGenres();\n      setGenres(genresData);\n      \n      // Load top 50 movies for each genre\n      const moviesData = {};\n      for (const genre of genresData) {\n        try {\n          const movies = await getMoviesByGenre(genre.id, 1, 50); // Limit to 50 movies\n          moviesData[genre.id] = movies;\n        } catch (error) {\n          console.error(`Error loading movies for genre ${genre.name}:`, error);\n          moviesData[genre.id] = [];\n        }\n      }\n      \n      setMoviesByGenre(moviesData);\n    } catch (error) {\n      console.error('Error loading data:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleMoviePress = (movie) => {\n    setSelectedMovie(movie);\n    setModalVisible(true);\n    \n    // Send movie selection to magician app via socket\n    socketService.selectMovie(movie);\n  };\n\n  const renderMoviePoster = ({ item }) => (\n    <TouchableOpacity\n      style={styles.moviePoster}\n      onPress={() => handleMoviePress(item)}\n      activeOpacity={0.7}\n    >\n      <Image\n        source={{\n          uri: `https://image.tmdb.org/t/p/w500${item.poster_path}`,\n        }}\n        style={styles.posterImage}\n        resizeMode=\"cover\"\n      />\n      <View style={styles.posterOverlay}>\n        <Text style={styles.movieTitle} numberOfLines={2}>\n          {item.title}\n        </Text>\n        <Text style={styles.movieYear}>\n          {new Date(item.release_date).getFullYear()}\n        </Text>\n      </View>\n    </TouchableOpacity>\n  );\n\n  const renderGenreSection = ({ item: genre }) => {\n    const movies = moviesByGenre[genre.id] || [];\n    \n    if (movies.length === 0) return null;\n\n    return (\n      <View style={styles.genreSection}>\n        <View style={styles.genreHeader}>\n          <Text style={styles.genreTitle}>{genre.name}</Text>\n          <Text style={styles.movieCount}>{movies.length} movies</Text>\n        </View>\n        \n        <FlatList\n          data={movies}\n          renderItem={renderMoviePoster}\n          keyExtractor={(movie) => movie.id.toString()}\n          horizontal\n          showsHorizontalScrollIndicator={false}\n          contentContainerStyle={styles.moviesRow}\n          snapToInterval={POSTER_WIDTH + 16}\n          decelerationRate=\"fast\"\n        />\n      </View>\n    );\n  };\n\n  if (loading) {\n    return (\n      <View style={styles.loadingContainer}>\n        <ActivityIndicator size=\"large\" color=\"#007AFF\" />\n        <Text style={styles.loadingText}>Loading movies...</Text>\n      </View>\n    );\n  }\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.header}>\n        <Text style={styles.title}>Movie Genres</Text>\n        <Text style={styles.subtitle}>Swipe through movies by genre</Text>\n      </View>\n      \n      <FlatList\n        data={genres}\n        renderItem={renderGenreSection}\n        keyExtractor={(item) => item.id.toString()}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.genresList}\n        onRefresh={loadGenresAndMovies}\n        refreshing={loading}\n      />\n\n      <MovieModal\n        visible={modalVisible}\n        movie={selectedMovie}\n        onClose={() => {\n          setModalVisible(false);\n          setSelectedMovie(null);\n        }}\n      />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#0a0a0a',\n  },\n  loadingContainer: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#0a0a0a',\n  },\n  loadingText: {\n    color: '#fff',\n    marginTop: 16,\n    fontSize: 16,\n  },\n  header: {\n    padding: 20,\n    alignItems: 'center',\n  },\n  title: {\n    fontSize: 28,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginBottom: 8,\n  },\n  subtitle: {\n    fontSize: 16,\n    color: '#888',\n    textAlign: 'center',\n  },\n  genresList: {\n    paddingBottom: 20,\n  },\n  genreSection: {\n    marginBottom: 30,\n  },\n  genreHeader: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingHorizontal: 20,\n    marginBottom: 16,\n  },\n  genreTitle: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff',\n  },\n  movieCount: {\n    fontSize: 14,\n    color: '#888',\n  },\n  moviesRow: {\n    paddingHorizontal: 20,\n  },\n  moviePoster: {\n    width: POSTER_WIDTH,\n    height: POSTER_HEIGHT,\n    marginRight: 16,\n    borderRadius: 12,\n    overflow: 'hidden',\n    elevation: 3,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n  },\n  posterImage: {\n    width: '100%',\n    height: '100%',\n  },\n  posterOverlay: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: 'rgba(0,0,0,0.8)',\n    padding: 12,\n  },\n  movieTitle: {\n    fontSize: 12,\n    fontWeight: '600',\n    color: '#fff',\n    marginBottom: 4,\n    textAlign: 'center',\n  },\n  movieYear: {\n    fontSize: 10,\n    color: '#888',\n    textAlign: 'center',\n  },\n});\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}